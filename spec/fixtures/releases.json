{
  "pagination": {
    "limit": 2,
    "offset": 0,
    "first": "/v3/releases?module=puppetlabs-apache&limit=2&offset=0",
    "previous": null,
    "current": "/v3/releases?module=puppetlabs-apache&limit=2&offset=0",
    "next": "/v3/releases?module=puppetlabs-apache&limit=2&offset=2",
    "total": 24
  },
  "results": [
    {
      "uri": "/v3/releases/puppetlabs-apache-1.2.0",
      "module": {
        "uri": "/v3/modules/puppetlabs-apache",
        "name": "apache",
        "owner": {
          "uri": "/v3/users/puppetlabs",
          "username": "puppetlabs",
          "gravatar_id": "fdd009b7c1ec96e088b389f773e87aec"
        }
      },
      "version": "1.2.0",
      "metadata": {
        "name": "puppetlabs-apache",
        "version": "1.2.0",
        "author": "puppetlabs",
        "summary": "Puppet module for Apache",
        "license": "Apache 2.0",
        "source": "git://github.com/puppetlabs/puppetlabs-apache.git",
        "project_page": "https://github.com/puppetlabs/puppetlabs-apache",
        "issues_url": "https://tickets.puppetlabs.com/browse/MODULES",
        "operatingsystem_support": [
          {
            "operatingsystem": "RedHat",
            "operatingsystemrelease": [
              "5",
              "6",
              "7"
            ]
          },
          {
            "operatingsystem": "CentOS",
            "operatingsystemrelease": [
              "5",
              "6",
              "7"
            ]
          },
          {
            "operatingsystem": "OracleLinux",
            "operatingsystemrelease": [
              "6",
              "7"
            ]
          },
          {
            "operatingsystem": "Scientific",
            "operatingsystemrelease": [
              "5",
              "6",
              "7"
            ]
          },
          {
            "operatingsystem": "Debian",
            "operatingsystemrelease": [
              "6",
              "7"
            ]
          },
          {
            "operatingsystem": "Ubuntu",
            "operatingsystemrelease": [
              "10.04",
              "12.04",
              "14.04"
            ]
          }
        ],
        "requirements": [
          {
            "name": "pe",
            "version_requirement": "3.x"
          },
          {
            "name": "puppet",
            "version_requirement": "3.x"
          }
        ],
        "description": "Module for Apache configuration",
        "dependencies": [
          {
            "name": "puppetlabs/stdlib",
            "version_requirement": ">= 2.4.0"
          },
          {
            "name": "puppetlabs/concat",
            "version_requirement": ">= 1.1.1"
          }
        ]
      },
      "tags": [
        "virtual-host",
        "apache",
        "web",
        "virtualhost",
        "httpd",
        "centos",
        "rhel",
        "debian",
        "ubuntu",
        "apache2",
        "ssl",
        "passenger",
        "wsgi",
        "proxy"
      ],
      "supported": false,
      "validation_score": 97,
      "file_uri": "/v3/files/puppetlabs-apache-1.2.0.tar.gz",
      "file_size": 128471,
      "file_md5": "77b6f3cd103d03325e104d5d10d2f2ef",
      "downloads": 100929,
      "readme": "#apache\n\n[![Build Status](https://travis-ci.org/puppetlabs/puppetlabs-apache.png?branch=master)](https://travis-ci.org/puppetlabs/puppetlabs-apache)\n\n####Table of Contents\n\n1. [Overview - What is the apache module?](#overview)\n2. [Module Description - What does the module do?](#module-description)\n3. [Setup - The basics of getting started with apache](#setup)\n    * [Beginning with apache - Installation](#beginning-with-apache)\n    * [Configure a virtual host - Basic options for getting started](#configure-a-virtual-host)\n4. [Usage - The classes and defined types available for configuration](#usage)\n    * [Classes and Defined Types](#classes-and-defined-types)\n        * [Class: apache](#class-apache)\n        * [Defined Type: apache::custom_config](#defined-type-apachecustom_config)\n        * [Class: apache::default_mods](#class-apachedefault_mods)\n        * [Defined Type: apache::mod](#defined-type-apachemod)\n        * [Classes: apache::mod::*](#classes-apachemodname)\n        * [Class: apache::mod::info](#class-apachemodinfo)\n        * [Class: apache::mod::pagespeed](#class-apachemodpagespeed)\n        * [Class: apache::mod::php](#class-apachemodphp)\n        * [Class: apache::mod::ssl](#class-apachemodssl)\n        * [Class: apache::mod::wsgi](#class-apachemodwsgi)\n        * [Class: apache::mod::fcgid](#class-apachemodfcgid)\n        * [Class: apache::mod::negotiation](#class-apachemodnegotiation)\n        * [Class: apache::mod::deflate](#class-apachemoddeflate)\n        * [Class: apache::mod::reqtimeout](#class-apachemodreqtimeout)\n        * [Class: apache::mod::version](#class-apachemodversion)\n        * [Defined Type: apache::vhost](#defined-type-apachevhost)\n        * [Parameter: `directories` for apache::vhost](#parameter-directories-for-apachevhost)\n        * [SSL parameters for apache::vhost](#ssl-parameters-for-apachevhost)\n        * [Defined Type: apache::fastcgi::server](#defined-type-fastcgi-server)\n    * [Virtual Host Examples - Demonstrations of some configuration options](#virtual-host-examples)\n    * [Load Balancing](#load-balancing)\n        * [Defined Type: apache::balancer](#defined-type-apachebalancer)\n        * [Defined Type: apache::balancermember](#defined-type-apachebalancermember)\n        * [Examples - Load balancing with exported and non-exported resources](#examples)\n5. [Reference - An under-the-hood peek at what the module is doing and how](#reference)\n    * [Classes](#classes)\n        * [Public Classes](#public-classes)\n        * [Private Classes](#private-classes)\n    * [Defined Types](#defined-types)\n        * [Public Defined Types](#public-defined-types)\n        * [Private Defined Types](#private-defined-types)\n    * [Templates](#templates)\n6. [Limitations - OS compatibility, etc.](#limitations)\n7. [Development - Guide for contributing to the module](#development)\n    * [Contributing to the apache module](#contributing)\n    * [Running tests - A quick guide](#running-tests)\n\n##Overview\n\nThe apache module allows you to set up virtual hosts and manage web services with minimal effort.\n\n##Module Description\n\nApache is a widely-used web server, and this module provides a simplified way of creating configurations to manage your infrastructure. This includes the ability to configure and manage a range of different virtual host setups, as well as a streamlined way to install and configure Apache modules.\n\n##Setup\n\n**What apache affects:**\n\n* configuration files and directories (created and written to)\n    * **WARNING**: Configurations that are *not* managed by Puppet will be purged.\n* package/service/configuration files for Apache\n* Apache modules\n* virtual hosts\n* listened-to ports\n* `/etc/make.conf` on FreeBSD\n\n###Beginning with Apache\n\nTo install Apache with the default parameters\n\n```puppet\n    class { 'apache':  }\n```\n\nThe defaults are determined by your operating system (e.g. Debian systems have one set of defaults, and RedHat systems have another, as do FreeBSD systems). These defaults work well in a testing environment, but are not suggested for production. To establish customized parameters\n\n```puppet\n    class { 'apache':\n      default_mods        => false,\n      default_confd_files => false,\n    }\n```\n\n###Configure a virtual host\n\nDeclaring the `apache` class creates a default virtual host by setting up a vhost on port 80, listening on all interfaces and serving `$apache::docroot`.\n\n```puppet\n    class { 'apache': }\n```\n\nTo configure a very basic, name-based virtual host\n\n```puppet\n    apache::vhost { 'first.example.com':\n      port    => '80',\n      docroot => '/var/www/first',\n    }\n```\n\n*Note:* The default priority is 15. If nothing matches this priority, the alphabetically first name-based vhost is used. This is also true if you pass a higher priority and no names match anything else.\n\nA slightly more complicated example, changes the docroot owner/group from the default 'root'\n\n```puppet\n    apache::vhost { 'second.example.com':\n      port          => '80',\n      docroot       => '/var/www/second',\n      docroot_owner => 'third',\n      docroot_group => 'third',\n    }\n```\n\nTo set up a virtual host with SSL and default SSL certificates\n\n```puppet\n    apache::vhost { 'ssl.example.com':\n      port    => '443',\n      docroot => '/var/www/ssl',\n      ssl     => true,\n    }\n```\n\nTo set up a virtual host with SSL and specific SSL certificates\n\n```puppet\n    apache::vhost { 'fourth.example.com':\n      port     => '443',\n      docroot  => '/var/www/fourth',\n      ssl      => true,\n      ssl_cert => '/etc/ssl/fourth.example.com.cert',\n      ssl_key  => '/etc/ssl/fourth.example.com.key',\n    }\n```\n\nVirtual hosts listen on '*' by default. To listen on a specific IP address\n\n```puppet\n    apache::vhost { 'subdomain.example.com':\n      ip      => '127.0.0.1',\n      port    => '80',\n      docroot => '/var/www/subdomain',\n    }\n```\n\nTo set up a virtual host with a wildcard alias for the subdomain mapped to a same-named directory, for example: `http://example.com.loc` to `/var/www/example.com`\n\n```puppet\n    apache::vhost { 'subdomain.loc':\n      vhost_name       => '*',\n      port             => '80',\n      virtual_docroot  => '/var/www/%-2+',\n      docroot          => '/var/www',\n      serveraliases    => ['*.loc',],\n    }\n```\n\nTo set up a virtual host with suPHP\n\n```puppet\n    apache::vhost { 'suphp.example.com':\n      port                => '80',\n      docroot             => '/home/appuser/myphpapp',\n      suphp_addhandler    => 'x-httpd-php',\n      suphp_engine        => 'on',\n      suphp_configpath    => '/etc/php5/apache2',\n      directories         => { path => '/home/appuser/myphpapp',\n        'suphp'           => { user => 'myappuser', group => 'myappgroup' },\n      }\n    }\n```\n\nTo set up a virtual host with WSGI\n\n```puppet\n    apache::vhost { 'wsgi.example.com':\n      port                        => '80',\n      docroot                     => '/var/www/pythonapp',\n      wsgi_application_group      => '%{GLOBAL}',\n      wsgi_daemon_process         => 'wsgi',\n      wsgi_daemon_process_options => {\n        processes    => '2',\n        threads      => '15',\n        display-name => '%{GROUP}',\n       },\n      wsgi_import_script          => '/var/www/demo.wsgi',\n      wsgi_import_script_options  =>\n        { process-group => 'wsgi', application-group => '%{GLOBAL}' },\n      wsgi_process_group          => 'wsgi',\n      wsgi_script_aliases         => { '/' => '/var/www/demo.wsgi' },\n    }\n```\n\nStarting in Apache 2.2.16, HTTPD supports [FallbackResource](https://httpd.apache.org/docs/current/mod/mod_dir.html#fallbackresource), a simple replacement for common RewriteRules.\n\n```puppet\n    apache::vhost { 'wordpress.example.com':\n      port                => '80',\n      docroot             => '/var/www/wordpress',\n      fallbackresource    => '/index.php',\n    }\n```\n\nPlease note that the 'disabled' argument to FallbackResource is only supported since Apache 2.2.24.\n\nSee a list of all [virtual host parameters](#defined-type-apachevhost). See an extensive list of [virtual host examples](#virtual-host-examples).\n\n##Usage\n\n###Classes and Defined Types\n\nThis module modifies Apache configuration files and directories and purges any configuration not managed by Puppet. Configuration of Apache should be managed by Puppet, as non-Puppet configuration files can cause unexpected failures.\n\nIt is possible to temporarily disable full Puppet management by setting the [`purge_configs`](#purge_configs) parameter within the base `apache` class to 'false'. This option should only be used as a temporary means of saving and relocating customized configurations. See the [`purge_configs` parameter](#purge_configs) for more information.\n\n####Class: `apache`\n\nThe apache module's primary class, `apache`, guides the basic setup of Apache on your system.\n\nYou can establish a default vhost in this class, the `vhost` class, or both. You can add additional vhost configurations for specific virtual hosts using a declaration of the `vhost` type.\n\n**Parameters within `apache`:**\n\n#####`allow_encoded_slashes`\n\nThis sets the server default for the [`AllowEncodedSlashes` declaration](http://httpd.apache.org/docs/current/mod/core.html#allowencodedslashes) which modifies the responses to URLs with `\\` and `/` characters. The default is undefined, which omits the declaration from the server configuration and select the Apache default setting of `Off`. Allowed values are: `on`, `off` or `nodecode`.\n\n#####`apache_version`\n\nConfigures the behavior of the module templates, package names, and default mods by setting the Apache version. Default is determined by the class `apache::version` using the OS family and release. It should not be configured manually without special reason.\n\n#####`conf_dir`\n\nChanges the location of the configuration directory the main configuration file is placed in. Defaults to '/etc/httpd/conf' on RedHat, '/etc/apache2' on Debian, and '/usr/local/etc/apache22' on FreeBSD.\n\n#####`confd_dir`\n\nChanges the location of the configuration directory your custom configuration files are placed in. Defaults to '/etc/httpd/conf' on RedHat, '/etc/apache2' on Debian, and '/usr/local/etc/apache22' on FreeBSD.\n\n#####`conf_template`\n\nOverrides the template used for the main apache configuration file. Defaults to 'apache/httpd.conf.erb'.\n\n*Note:* Using this parameter is potentially risky, as the module has been built for a minimal configuration file with the configuration primarily coming from conf.d/ entries.\n\n#####`default_confd_files`\n\nGenerates default set of include-able Apache configuration files under  `${apache::confd_dir}` directory. These configuration files correspond to what is usually installed with the Apache package on a given platform.\n\n#####`default_mods`\n\nSets up Apache with default settings based on your OS. Valid values are 'true', 'false', or an array of mod names.\n\nDefaults to 'true', which includes the default [HTTPD mods](https://github.com/puppetlabs/puppetlabs-apache/blob/master/manifests/default_mods.pp).\n\nIf false, it only includes the mods required to make HTTPD work, and any other mods can be declared on their own.\n\nIf an array, the apache module includes the array of mods listed.\n\n#####`default_ssl_ca`\n\nThe default certificate authority, which is automatically set to 'undef'. This default works out of the box but must be updated with your specific certificate information before being used in production.\n\n#####`default_ssl_cert`\n\nThe default SSL certification, which is automatically set based on your operating system  ('/etc/pki/tls/certs/localhost.crt' for RedHat, '/etc/ssl/certs/ssl-cert-snakeoil.pem' for Debian, and '/usr/local/etc/apache22/server.crt' for FreeBSD). This default works out of the box but must be updated with your specific certificate information before being used in production.\n\n#####`default_ssl_chain`\n\nThe default SSL chain, which is automatically set to 'undef'. This default works out of the box but must be updated with your specific certificate information before being used in production.\n\n#####`default_ssl_crl`\n\nThe default certificate revocation list to use, which is automatically set to 'undef'. This default works out of the box but must be updated with your specific certificate information before being used in production.\n\n#####`default_ssl_crl_path`\n\nThe default certificate revocation list path, which is automatically set to 'undef'. This default works out of the box but must be updated with your specific certificate information before being used in production.\n\n#####`default_ssl_crl_check`\n\nSets the default certificate revocation check level via the [SSLCARevocationCheck directive](http://httpd.apache.org/docs/current/mod/mod_ssl.html#sslcarevocationcheck), which is automatically set to 'undef'. This default works out of the box but must be specified when using CRLs in production. Only applicable to Apache 2.4 or higher, the value is ignored on older versions.\n\n#####`default_ssl_key`\n\nThe default SSL key, which is automatically set based on your operating system ('/etc/pki/tls/private/localhost.key' for RedHat, '/etc/ssl/private/ssl-cert-snakeoil.key' for Debian, and '/usr/local/etc/apache22/server.key' for FreeBSD). This default works out of the box but must be updated with your specific certificate information before being used in production.\n\n#####`default_ssl_vhost`\n\nSets up a default SSL virtual host. Defaults to 'false'. If set to 'true', sets up the following vhost:\n\n```puppet\n    apache::vhost { 'default-ssl':\n      port            => 443,\n      ssl             => true,\n      docroot         => $docroot,\n      scriptalias     => $scriptalias,\n      serveradmin     => $serveradmin,\n      access_log_file => \"ssl_${access_log_file}\",\n      }\n```\n\nSSL vhosts only respond to HTTPS queries.\n\n#####`default_vhost`\n\nSets up a default virtual host. Defaults to 'true', set to 'false' to set up [customized virtual hosts](#configure-a-virtual-host).\n\n#####`docroot`\n\nChanges the location of the default [Documentroot](https://httpd.apache.org/docs/current/mod/core.html#documentroot). Defaults to '/var/www/html' on RedHat, '/var/www' on Debian, and '/usr/local/www/apache22/data' on FreeBSD.\n\n#####`error_documents`\n\nEnables custom error documents. Defaults to 'false'.\n\n#####`httpd_dir`\n\nChanges the base location of the configuration directories used for the apache service. This is useful for specially repackaged HTTPD builds, but might have unintended consequences when used in combination with the default distribution packages. Defaults to '/etc/httpd' on RedHat, '/etc/apache2' on Debian, and '/usr/local/etc/apache22' on FreeBSD.\n\n#####`keepalive`\n\nEnables persistent connections.\n\n#####`keepalive_timeout`\n\nSets the amount of time the server waits for subsequent requests on a persistent connection. Defaults to '15'.\n\n#####`max_keepalive_requests`\n\nSets the limit of the number of requests allowed per connection when KeepAlive is on. Defaults to '100'.\n\n#####`loadfile_name`\n\nSets the file name for the module loadfile. Should be in the format *.load.  This can be used to set the module load order.\n\n#####`log_level`\n\nChanges the verbosity level of the error log. Defaults to 'warn'. Valid values are 'emerg', 'alert', 'crit', 'error', 'warn', 'notice', 'info', or 'debug'.\n\n#####`log_formats`\n\nDefine additional [LogFormats](https://httpd.apache.org/docs/current/mod/mod_log_config.html#logformat). This is done in a Hash:\n\n```puppet\n  $log_formats = { vhost_common => '%v %h %l %u %t \\\"%r\\\" %>s %b' }\n```\n\n#####`logroot`\n\nChanges the directory where Apache log files for the virtual host are placed. Defaults to '/var/log/httpd' on RedHat, '/var/log/apache2' on Debian, and '/var/log/apache22' on FreeBSD.\n\n#####`logroot_mode`\n\nOverrides the mode the default logroot directory is set to ($::apache::logroot). Defaults to undef. Do NOT give people write access to the directory the logs are stored\nin without being aware of the consequences; see http://httpd.apache.org/docs/2.4/logs.html#security for details.\n\n#####`manage_group`\n\nSetting this to 'false' stops the group resource from being created. This is for when you have a group, created from another Puppet module, you want to use to run Apache. Without this parameter, attempting to use a previously established group would result in a duplicate resource error.\n\n#####`manage_user`\n\nSetting this to 'false' stops the user resource from being created. This is for instances when you have a user, created from another Puppet module, you want to use to run Apache. Without this parameter, attempting to use a previously established user would result in a duplicate resource error.\n\n#####`mod_dir`\n\nChanges the location of the configuration directory your Apache modules configuration files are placed in. Defaults to '/etc/httpd/conf.d' for RedHat, '/etc/apache2/mods-available' for Debian, and '/usr/local/etc/apache22/Modules' for FreeBSD.\n\n#####`mpm_module`\n\nDetermines which MPM is loaded and configured for the HTTPD process. Valid values are 'event', 'itk', 'peruser', 'prefork', 'worker', or 'false'. Defaults to 'prefork' on RedHat and FreeBSD, and 'worker' on Debian. Must be set to 'false' to explicitly declare the following classes with custom parameters:\n\n* `apache::mod::event`\n* `apache::mod::itk`\n* `apache::mod::peruser`\n* `apache::mod::prefork`\n* `apache::mod::worker`\n\n*Note:* Switching between different MPMs on FreeBSD is possible but quite difficult. Before changing `$mpm_module` you must uninstall all packages that depend on your currently-installed Apache.\n\n#####`package_ensure`\n\nAllows control over the package ensure attribute. Can be 'present','absent', or a version string.\n\n#####`ports_file`\n\nChanges the name of the file containing Apache ports configuration. Default is `${conf_dir}/ports.conf`.\n\n#####`purge_configs`\n\nRemoves all other Apache configs and vhosts, defaults to 'true'. Setting this to 'false' is a stopgap measure to allow the apache module to coexist with existing or otherwise-managed configuration. It is recommended that you move your configuration entirely to resources within this module.\n\n#####`purge_vhost_configs`\n\nIf `vhost_dir` != `confd_dir`, this controls the removal of any configurations that are not managed by Puppet within `vhost_dir`. It defaults to the value of `purge_configs`. Setting this to false is a stopgap measure to allow the apache module to coexist with existing or otherwise unmanaged configurations within `vhost_dir`\n\n#####`sendfile`\n\nMakes Apache use the Linux kernel sendfile to serve static files. Defaults to 'On'.\n\n#####`serveradmin`\n\nSets the server administrator. Defaults to 'root@localhost'.\n\n#####`servername`\n\nSets the server name. Defaults to `fqdn` provided by Facter.\n\n#####`server_root`\n\nSets the root directory in which the server resides. Defaults to '/etc/httpd' on RedHat, '/etc/apache2' on Debian, and '/usr/local' on FreeBSD.\n\n#####`server_signature`\n\nConfigures a trailing footer line under server-generated documents. More information about [ServerSignature](http://httpd.apache.org/docs/current/mod/core.html#serversignature). Defaults to 'On'.\n\n#####`server_tokens`\n\nControls how much information Apache sends to the browser about itself and the operating system. More information about [ServerTokens](http://httpd.apache.org/docs/current/mod/core.html#servertokens). Defaults to 'OS'.\n\n#####`service_enable`\n\nDetermines whether the HTTPD service is enabled when the machine is booted. Defaults to 'true'.\n\n#####`service_ensure`\n\nDetermines whether the service should be running. Valid values are 'true', 'false', 'running', or 'stopped' when Puppet should manage the service. Any other value sets ensure to 'false' for the Apache service, which is useful when you want to let the service be managed by some other application like Pacemaker. Defaults to 'running'.\n\n#####`service_name`\n\nName of the Apache service to run. Defaults to: 'httpd' on RedHat, 'apache2' on Debian, and 'apache22' on FreeBSD.\n\n#####`trace_enable`\n\nControls how TRACE requests per RFC 2616 are handled. More information about [TraceEnable](http://httpd.apache.org/docs/current/mod/core.html#traceenable). Defaults to 'On'.\n\n#####`vhost_dir`\n\nChanges the location of the configuration directory your virtual host configuration files are placed in. Defaults to 'etc/httpd/conf.d' on RedHat, '/etc/apache2/sites-available' on Debian, and '/usr/local/etc/apache22/Vhosts' on FreeBSD.\n\n#####`apache_name`\n\nThe name of the Apache package to install. This is automatically detected in `::apache::params`. You might need to override this if you are using a non-standard Apache package, such as those from Red Hat's software collections.\n\n####Defined Type: `apache::custom_config`\n\nAllows you to create custom configs for Apache. The configuration files are only added to the Apache confd dir if the file is valid. An error is raised during the Puppet run if the file is invalid and `$verify_config` is `true`.\n\n```puppet\n    apache::custom_config { 'test':\n        content => '# Test',\n    }\n```\n\n**Parameters within `apache::custom_config`:**\n\n#####`ensure`\n\nSpecify whether the configuration file is present or absent. Defaults to 'present'. Valid values are 'present' and 'absent'.\n\n#####`confdir`\n\nThe directory to place the configuration file in. Defaults to `$::apache::confd_dir`.\n\n#####`content`\n\nThe content of the configuration file. Only one of `$content` and `$source` can be specified.\n\n#####`priority`\n\nThe priority of the configuration file, used for ordering. Defaults to '25'.\n\n#####`source`\n\nThe source of the configuration file. Only one of `$content` and `$source` can be specified.\n\n#####`verify_command`\n\nThe command to use to verify the configuration file. It should use a fully qualified command. Defaults to '/usr/sbin/apachectl -t'. The `$verify_command` is only used if `$verify_config` is `true`. If the `$verify_command` fails, the configuration file is deleted, the Apache service is not notified, and an error is raised during the Puppet run.\n\n#####`verify_config`\n\nBoolean to specify whether the configuration file should be validated before the Apache service is notified. Defaults to `true`.\n\n####Class: `apache::default_mods`\n\nInstalls default Apache modules based on what OS you are running.\n\n```puppet\n    class { 'apache::default_mods': }\n```\n\n####Defined Type: `apache::mod`\n\nUsed to enable arbitrary Apache HTTPD modules for which there is no specific `apache::mod::[name]` class. The `apache::mod` defined type also installs the required packages to enable the module, if any.\n\n```puppet\n    apache::mod { 'rewrite': }\n    apache::mod { 'ldap': }\n```\n\n####Classes: `apache::mod::[name]`\n\nThere are many `apache::mod::[name]` classes within this module that can be declared using `include`:\n\n* `actions`\n* `alias`\n* `auth_basic`\n* `auth_kerb`\n* `authnz_ldap`*\n* `autoindex`\n* `cache`\n* `cgi`\n* `cgid`\n* `dav`\n* `dav_fs`\n* `dav_svn`*\n* `deflate`\n* `dev`\n* `dir`*\n* `disk_cache`\n* `event`\n* `expires`\n* `fastcgi`\n* `fcgid`\n* `headers`\n* `include`\n* `info`*\n* `itk`\n* `ldap`\n* `mime`\n* `mime_magic`*\n* `negotiation`\n* `nss`*\n* `pagespeed` (see [`apache::mod::pagespeed`](#class-apachemodpagespeed) below)\n* `passenger`*\n* `perl`\n* `peruser`\n* `php` (requires [`mpm_module`](#mpm_module) set to `prefork`)\n* `prefork`*\n* `proxy`*\n* `proxy_ajp`\n* `proxy_balancer`\n* `proxy_html`\n* `proxy_http`\n* `python`\n* `reqtimeout`\n* `rewrite`\n* `rpaf`*\n* `setenvif`\n* `shib`* (see [`apache::mod::shib`](#class-apachemodshib) below)\n* `speling`\n* `ssl`* (see [`apache::mod::ssl`](#class-apachemodssl) below)\n* `status`*\n* `suphp`\n* `userdir`*\n* `vhost_alias`\n* `worker`*\n* `wsgi` (see [`apache::mod::wsgi`](#class-apachemodwsgi) below)\n* `xsendfile`\n\nModules noted with a * indicate that the module has settings and, thus, a template that includes parameters. These parameters control the module's configuration. Most of the time, these parameters do not require any configuration or attention.\n\nThe modules mentioned above, and other Apache modules that have templates, cause template files to be dropped along with the mod install. The module will not work without the template. Any module without a template installs the package but drops no files.\n\n####Class: `apache::mod::info`\n\nInstalls and manages mod_info which provides a comprehensive overview of the server configuration.\n\nFull documentation for mod_info is available from [Apache](http://httpd.apache.org/docs/2.2/mod/mod_info.html).\n\nThese are the default settings:\n\n```puppet\n  $allow_from      = ['127.0.0.1','::1'],\n  $apache_version  = $::apache::apache_version,\n  $restrict_access = true,\n```\n\nTo set the addresses that are allowed to access /server-info add the following:\n\n```puppet\n  class {'apache::mod::info':\n    allow_from      => [\n      '10.10.36',\n      '10.10.38',\n      '127.0.0.1',\n    ],\n  }\n```\n\nTo disable the access restrictions add the following:\n\n```puppet\n  class {'apache::mod::info':\n    restrict_access => false,\n  }\n```\n\nIt is not recommended to leave this set to false though it can be very useful for testing. For this reason, you can insert this setting in your normal code to temporarily disable the restrictions like so:\n\n```puppet\n  class {'apache::mod::info':\n    restrict_access => false, # false disables the block below\n    allow_from      => [\n      '10.10.36',\n      '10.10.38',\n      '127.0.0.1',\n    ],\n  }\n```\n\n####Class: `apache::mod::pagespeed`\n\nInstalls and manages mod_pagespeed, which is a Google module that rewrites web pages to reduce latency and bandwidth.\n\nThis module does *not* manage the software repositories needed to automatically install the\nmod-pagespeed-stable package. The module does however require that the package be installed,\nor be installable using the system's default package provider.  You should ensure that this\npre-requisite is met or declaring `apache::mod::pagespeed` causes the Puppet run to fail.\n\nThese are the defaults:\n\n```puppet\n    class { 'apache::mod::pagespeed':\n      inherit_vhost_config          => 'on',\n      filter_xhtml                  => false,\n      cache_path                    => '/var/cache/mod_pagespeed/',\n      log_dir                       => '/var/log/pagespeed',\n      memcache_servers              => [],\n      rewrite_level                 => 'CoreFilters',\n      disable_filters               => [],\n      enable_filters                => [],\n      forbid_filters                => [],\n      rewrite_deadline_per_flush_ms => 10,\n      additional_domains            => undef,\n      file_cache_size_kb            => 102400,\n      file_cache_clean_interval_ms  => 3600000,\n      lru_cache_per_process         => 1024,\n      lru_cache_byte_limit          => 16384,\n      css_flatten_max_bytes         => 2048,\n      css_inline_max_bytes          => 2048,\n      css_image_inline_max_bytes    => 2048,\n      image_inline_max_bytes        => 2048,\n      js_inline_max_bytes           => 2048,\n      css_outline_min_bytes         => 3000,\n      js_outline_min_bytes          => 3000,\n      inode_limit                   => 500000,\n      image_max_rewrites_at_once    => 8,\n      num_rewrite_threads           => 4,\n      num_expensive_rewrite_threads => 4,\n      collect_statistics            => 'on',\n      statistics_logging            => 'on',\n      allow_view_stats              => [],\n      allow_pagespeed_console       => [],\n      allow_pagespeed_message       => [],\n      message_buffer_size           => 100000,\n      additional_configuration      => { }\n    }\n```\n\nFull documentation for mod_pagespeed is available from [Google](http://modpagespeed.com).\n\n####Class: `apache::mod::php`\n\nInstalls and configures mod_php. The defaults are OS-dependant.\n\nOverriding the package name:\n```puppet\n  class {'::apache::mod::php':\n    package_name => \"php54-php\",\n    path         => \"${::apache::params::lib_path}/libphp54-php5.so\",\n  }\n```\n\nOverriding the default configuartion:\n```puppet\n  class {'::apache::mod::php':\n    source => 'puppet:///modules/apache/my_php.conf',\n  }\n```\n\nor\n```puppet\n  class {'::apache::mod::php':\n    template => 'apache/php.conf.erb',\n  }\n```\n\nor\n\n```puppet\n  class {'::apache::mod::php':\n    content => '\nAddHandler php5-script .php\nAddType text/html .php',\n  }\n```\n####Class: `apache::mod::shib`\n\nInstalls the [Shibboleth](http://shibboleth.net/) module for Apache which allows the use of SAML2 Single-Sign-On (SSO) authentication by Shibboleth Identity Providers and Shibboleth Federations. This class only installs and configures the Apache components of a Shibboleth Service Provider (a web application that consumes Shibboleth SSO identities). The Shibboleth configuration can be managed manually, with Puppet, or using a [Shibboleth Puppet Module](https://github.com/aethylred/puppet-shibboleth).\n\nDefining this class enables the Shibboleth specific parameters in `apache::vhost` instances.\n\n####Class: `apache::mod::ssl`\n\nInstalls Apache SSL capabilities and uses the ssl.conf.erb template. These are the defaults:\n\n```puppet\n    class { 'apache::mod::ssl':\n      ssl_compression => false,\n      ssl_options     => [ 'StdEnvVars' ],\n      ssl_protocol    => [ 'all', '-SSLv2', '-SSLv3'],\n  }\n```\n\nTo *use* SSL with a virtual host, you must either set the`default_ssl_vhost` parameter in `::apache` to 'true' or set the `ssl` parameter in `apache::vhost` to 'true'.\n\n####Class: `apache::mod::wsgi`\n\nEnables Python support in the WSGI module. To use, simply `include 'apache::mod::wsgi'`.\n\nFor customized parameters, which tell Apache how Python is currently configured on the operating system,\n\n```puppet\n    class { 'apache::mod::wsgi':\n      wsgi_socket_prefix => \"\\${APACHE_RUN_DIR}WSGI\",\n      wsgi_python_home   => '/path/to/venv',\n      wsgi_python_path   => '/path/to/venv/site-packages',\n    }\n```\n\nMore information about [WSGI](http://modwsgi.readthedocs.org/en/latest/).\n\n####Class: `apache::mod::fcgid`\n\nInstalls and configures mod_fcgid.\n\nThe class makes no effort to list all available options, but rather uses an options hash to allow for ultimate flexibility:\n\n```puppet\n    class { 'apache::mod::fcgid':\n      options => {\n        'FcgidIPCDir'  => '/var/run/fcgidsock',\n        'SharememPath' => '/var/run/fcgid_shm',\n        'AddHandler'   => 'fcgid-script .fcgi',\n      },\n    }\n```\n\nFor a full list op options, see the [official mod_fcgid documentation](https://httpd.apache.org/mod_fcgid/mod/mod_fcgid.html).\n\nIt is also possible to set the FcgidWrapper per directory per vhost. You must ensure the fcgid module is loaded because there is no auto loading.\n\n```puppet\n    include apache::mod::fcgid\n    apache::vhost { 'example.org':\n      docroot     => '/var/www/html',\n      directories => {\n        path        => '/var/www/html',\n        fcgiwrapper => {\n          command => '/usr/local/bin/fcgiwrapper',\n        }\n      },\n    }\n```\n\nSee [FcgidWrapper documentation](https://httpd.apache.org/mod_fcgid/mod/mod_fcgid.html#fcgidwrapper) for more information.\n\n####Class: `apache::mod::negotiation`\n\nInstalls and configures mod_negotiation. If there are not provided any\nparameter, default apache mod_negotiation configuration is done.\n\n```puppet\n  class { '::apache::mod::negotiation':\n    force_language_priority => 'Prefer',\n    language_priority       => [ 'es', 'en', 'ca', 'cs', 'da', 'de', 'el', 'eo' ],\n  }\n```\n\n**Parameters within `apache::mod::negotiation`:**\n\n#####`force_language_priority`\n\nA string that sets the `ForceLanguagePriority` option. Defaults to `Prefer Fallback`.\n\n#####`language_priority`\n\nAn array of languages to set the `LanguagePriority` option of the module.\n\n####Class: `apache::mod::deflate`\n\nInstalls and configures mod_deflate. If no parameters are provided, a default configuration is applied.\n\n```puppet\n  class { '::apache::mod::deflate':\n    types => [ 'text/html', 'text/css' ],\n    notes => {\n      'Input' => 'instream',\n      'Ratio' => 'ratio',\n    },\n  }\n```\n\n#####`types`\n\nAn array of mime types to be deflated.\n\n#####`notes`\n\nA hash where the key represents the type and the value represents the note name.\n\n\n####Class: `apache::mod::reqtimeout`\n\nInstalls and configures mod_reqtimeout. Defaults to recommended apache\nmod_reqtimeout configuration.\n\n```puppet\n  class { '::apache::mod::reqtimeout':\n    timeouts => ['header=20-40,MinRate=500', 'body=20,MinRate=500'],\n  }\n```\n\n####Class: `apache::mod::reqtimeout`\n\nThis wrapper around mod_version warns on Debian and Ubuntu systems with Apache httpd 2.4\nabout loading mod_version, as on these platforms it's already built-in.\n\n```puppet\n  include '::apache::mod::version'\n```\n\n#####`timeouts`\n\nA string or an array that sets the `RequestReadTimeout` option. Defaults to\n`['header=20-40,MinRate=500', 'body=20,MinRate=500']`.\n\n\n####Defined Type: `apache::vhost`\n\nThe Apache module allows a lot of flexibility in the setup and configuration of virtual hosts. This flexibility is due, in part, to `vhost` being a defined resource type, which allows it to be evaluated multiple times with different parameters.\n\nThe `vhost` defined type allows you to have specialized configurations for virtual hosts that have requirements outside the defaults. You can set up a default vhost within the base `::apache` class, as well as set a customized vhost as default. Your customized vhost (priority 10) will be privileged over the base class vhost (15).\n\nThe `vhost` defined type uses `concat::fragment` to build the configuration file, so if you want to inject custom fragments for pieces of the configuration not supported by default by the defined type, you can add a custom fragment.  For the `order` parameter for the custom fragment, the `vhost` defined type uses multiples of 10, so any order that isn't a multiple of 10 should work.\n\n```puppet\n    apache::vhost { \"example.com\":\n      docroot  => '/var/www/html',\n      priority => '25',\n    }\n    concat::fragment { \"example.com-my_custom_fragment\":\n      target  => '25-example.com.conf',\n      order   => 11,\n      content => '# my custom comment',\n    }\n```\n\nIf you have a series of specific configurations and do not want a base `::apache` class default vhost, make sure to set the base class `default_vhost` to 'false'.\n\n```puppet\n    class { 'apache':\n      default_vhost => false,\n    }\n```\n\n**Parameters within `apache::vhost`:**\n\n#####`access_log`\n\nSpecifies whether `*_access.log` directives (`*_file`,`*_pipe`, or `*_syslog`) should be configured. Setting the value to 'false' chooses none. Defaults to 'true'. \n\n#####`access_log_file`\n\nSets the `*_access.log` filename that is placed in `$logroot`. Given a vhost, example.com, it defaults to 'example.com_ssl.log' for SSL vhosts and 'example.com_access.log' for non-SSL vhosts.\n\n#####`access_log_pipe`\n\nSpecifies a pipe to send access log messages to. Defaults to 'undef'.\n\n#####`access_log_syslog`\n\nSends all access log messages to syslog. Defaults to 'undef'.\n\n#####`access_log_format`\n\nSpecifies the use of either a LogFormat nickname or a custom format string for the access log. Defaults to 'combined'. See [these examples](http://httpd.apache.org/docs/current/mod/mod_log_config.html).\n\n#####`access_log_env_var`\n\nSpecifies that only requests with particular environment variables be logged. Defaults to 'undef'.\n\n#####`add_default_charset`\n\nSets [AddDefaultCharset](http://httpd.apache.org/docs/current/mod/core.html#adddefaultcharset), a default value for the media charset, which is added to text/plain and text/html responses.\n\n#####`add_listen`\n\nDetermines whether the vhost creates a Listen statement. The default value is 'true'.\n\nSetting `add_listen` to 'false' stops the vhost from creating a Listen statement, and this is important when you combine vhosts that are not passed an `ip` parameter with vhosts that *are* passed the `ip` parameter.\n\n#####`additional_includes`\n\nSpecifies paths to additional static, vhost-specific Apache configuration files. Useful for implementing a unique, custom configuration not supported by this module. Can be an array. Defaults to '[]'.\n\n#####`aliases`\n\nPasses a list of hashes to the vhost to create Alias, AliasMatch, ScriptAlias or ScriptAliasMatch directives as per the [mod_alias documentation](http://httpd.apache.org/docs/current/mod/mod_alias.html). These hashes are formatted as follows:\n\n```puppet\naliases => [\n  { aliasmatch       => '^/image/(.*)\\.jpg$',\n    path             => '/files/jpg.images/$1.jpg',\n  }\n  { alias            => '/image',\n    path             => '/ftp/pub/image',\n  },\n  { scriptaliasmatch => '^/cgi-bin(.*)',\n    path             => '/usr/local/share/cgi-bin$1',\n  },\n  { scriptalias      => '/nagios/cgi-bin/',\n    path             => '/usr/lib/nagios/cgi-bin/',\n  },\n  { alias            => '/nagios',\n    path             => '/usr/share/nagios/html',\n  },\n],\n```\n\nFor `alias`, `aliasmatch`, `scriptalias` and `scriptaliasmatch` to work, each needs a corresponding context, such as `<Directory /path/to/directory>` or `<Location /some/location/here>`. The directives are created in the order specified in the `aliases` parameter. As described in the [`mod_alias` documentation](http://httpd.apache.org/docs/current/mod/mod_alias.html), more specific `alias`, `aliasmatch`, `scriptalias` or `scriptaliasmatch` parameters should come before the more general ones to avoid shadowing.\n\n*Note*: Using the `aliases` parameter is preferred over the `scriptaliases` parameter since here the order of the various alias directives among each other can be controlled precisely. Defining ScriptAliases using the `scriptaliases` parameter means *all* ScriptAlias directives will come after *all* Alias directives, which can lead to Alias directives shadowing ScriptAlias directives. This is often problematic, for example in case of Nagios.\n\n*Note:* If `apache::mod::passenger` is loaded and `PassengerHighPerformance => true` is set, then Alias might have issues honoring the `PassengerEnabled => off` statement. See [this article](http://www.conandalton.net/2010/06/passengerenabled-off-not-working.html) for details.\n\n#####`allow_encoded_slashes`\n\nThis sets the [`AllowEncodedSlashes` declaration](http://httpd.apache.org/docs/current/mod/core.html#allowencodedslashes) for the vhost, overriding the server default. This modifies the vhost responses to URLs with `\\` and `/` characters. The default is undefined, which omits the declaration from the server configuration and select the Apache default setting of `Off`. Allowed values are: `on`, `off` or `nodecode`.\n\n#####`block`\n\nSpecifies the list of things Apache blocks access to. The default is an empty set, '[]'. Currently, the only option is 'scm', which blocks web access to .svn, .git and .bzr directories.\n\n#####`custom_fragment`\n\nPasses a string of custom configuration directives to be placed at the end of the vhost configuration. Defaults to 'undef'.\n\n#####`default_vhost`\n\nSets a given `apache::vhost` as the default to serve requests that do not match any other `apache::vhost` definitions. The default value is 'false'.\n\n#####`directories`\n\nSee the [`directories` section](#parameter-directories-for-apachevhost).\n\n#####`directoryindex`\n\nSets the list of resources to look for when a client requests an index of the directory by specifying a '/' at the end of the directory name. [DirectoryIndex](http://httpd.apache.org/docs/current/mod/mod_dir.html#directoryindex) has more information. Defaults to 'undef'.\n\n#####`docroot`\n\nProvides the\n[DocumentRoot](http://httpd.apache.org/docs/current/mod/core.html#documentroot)\ndirective, which identifies the directory Apache serves files from. Required.\n\n#####`docroot_group`\n\nSets group access to the docroot directory. Defaults to 'root'.\n\n#####`docroot_owner`\n\nSets individual user access to the docroot directory. Defaults to 'root'.\n\n#####`docroot_mode`\n\nSets access permissions of the docroot directory. Defaults to 'undef'.\n\n#####`manage_docroot`\n\nWhether to manage to docroot directory at all. Defaults to 'true'.\n\n#####`error_log`\n\nSpecifies whether `*_error.log` directives should be configured. Defaults to 'true'.\n\n#####`error_log_file`\n\nPoints to the `*_error.log` file. Given a vhost, example.com, it defaults to 'example.com_ssl_error.log' for SSL vhosts and 'example.com_access_error.log' for non-SSL vhosts.\n\n#####`error_log_pipe`\n\nSpecifies a pipe to send error log messages to. Defaults to 'undef'.\n\n#####`error_log_syslog`\n\nSends all error log messages to syslog. Defaults to 'undef'.\n\n#####`error_documents`\n\nA list of hashes which can be used to override the [ErrorDocument](https://httpd.apache.org/docs/current/mod/core.html#errordocument) settings for this vhost. Defaults to '[]'. Example:\n\n```puppet\n    apache::vhost { 'sample.example.net':\n      error_documents => [\n        { 'error_code' => '503', 'document' => '/service-unavail' },\n        { 'error_code' => '407', 'document' => 'https://example.com/proxy/login' },\n      ],\n    }\n```\n\n#####`ensure`\n\nSpecifies if the vhost file is present or absent. Defaults to 'present'.\n\n#####`fallbackresource`\n\nSets the [FallbackResource](http://httpd.apache.org/docs/current/mod/mod_dir.html#fallbackresource) directive, which specifies an action to take for any URL that doesn't map to anything in your filesystem and would otherwise return 'HTTP 404 (Not Found)'. Valid values must either begin with a / or be 'disabled'. Defaults to 'undef'.\n\n#####`headers`\n\nAdds lines to replace, merge, or remove response headers. See [Header](http://httpd.apache.org/docs/current/mod/mod_headers.html#header) for more information. Can be an array. Defaults to 'undef'.\n\n#####`ip`\n\nSets the IP address the vhost listens on. Defaults to listen on all IPs.\n\n#####`ip_based`\n\nEnables an [IP-based](http://httpd.apache.org/docs/current/vhosts/ip-based.html) vhost. This parameter inhibits the creation of a NameVirtualHost directive, since those are used to funnel requests to name-based vhosts. Defaults to 'false'.\n\n#####`itk`\n\nConfigures [ITK](http://mpm-itk.sesse.net/) in a hash. Keys can be:\n\n* user + group\n* `assignuseridexpr`\n* `assigngroupidexpr`\n* `maxclientvhost`\n* `nice`\n* `limituidrange` (Linux 3.5.0 or newer)\n* `limitgidrange` (Linux 3.5.0 or newer)\n\nUsage typically looks like:\n\n```puppet\n    apache::vhost { 'sample.example.net':\n      docroot => '/path/to/directory',\n      itk     => {\n        user  => 'someuser',\n        group => 'somegroup',\n      },\n    }\n```\n\n#####`logroot`\n\nSpecifies the location of the virtual host's logfiles. Defaults to '/var/log/<apache log location>/'.\n\n#####`$logroot_ensure`\n\nDetermines whether or not to remove the logroot directory for a virtual host. Valid values are 'directory', or 'absent'.\n\n#####`logroot_mode`\n\nOverrides the mode the logroot directory is set to. Defaults to undef. Do NOT give people write access to the directory the logs are stored\nin without being aware of the consequences; see http://httpd.apache.org/docs/2.4/logs.html#security for details.\n\n#####`log_level`\n\nSpecifies the verbosity of the error log. Defaults to 'warn' for the global server configuration and can be overridden on a per-vhost basis. Valid values are 'emerg', 'alert', 'crit', 'error', 'warn', 'notice', 'info' or 'debug'.\n\n#####`no_proxy_uris`\n\nSpecifies URLs you do not want to proxy. This parameter is meant to be used in combination with [`proxy_dest`](#proxy_dest).\n\n#####`proxy_preserve_host`\n\nSets the [ProxyPreserveHost Directive](http://httpd.apache.org/docs/2.2/mod/mod_proxy.html#proxypreservehost).  true Enables the Host: line from an incoming request to be proxied to the host instead of hostname .  false sets this option to off (default).\n\n#####`options`\n\nSets the [Options](http://httpd.apache.org/docs/current/mod/core.html#options) for the specified virtual host. Defaults to '['Indexes','FollowSymLinks','MultiViews']', as demonstrated below:\n\n```puppet\n    apache::vhost { 'site.name.fdqn':\n      …\n      options => ['Indexes','FollowSymLinks','MultiViews'],\n    }\n```\n\n*Note:* If you use [`directories`](#parameter-directories-for-apachevhost), 'Options', 'Override', and 'DirectoryIndex' are ignored because they are parameters within `directories`.\n\n#####`override`\n\nSets the overrides for the specified virtual host. Accepts an array of [AllowOverride](http://httpd.apache.org/docs/current/mod/core.html#allowoverride) arguments. Defaults to '[none]'.\n\n#####`passenger_app_root`\n\nSets [PassengerRoot](https://www.phusionpassenger.com/documentation/Users%20guide%20Apache.html#PassengerAppRoot), the location of the Passenger application root if different from the DocumentRoot.\n\n#####`passenger_ruby`\n\nSets [PassengerRuby](https://www.phusionpassenger.com/documentation/Users%20guide%20Apache.html#PassengerRuby) on this virtual host, the Ruby interpreter to use for the application.\n\n#####`passenger_min_instances`\n\nSets [PassengerMinInstances](https://www.phusionpassenger.com/documentation/Users%20guide%20Apache.html#PassengerMinInstances), the minimum number of application processes to run.\n\n#####`passenger_start_timeout`\n\nSets [PassengerStartTimeout](https://www.phusionpassenger.com/documentation/Users%20guide%20Apache.html#_passengerstarttimeout_lt_seconds_gt), the timeout for the application startup.\n\n#####`passenger_pre_start`\n\nSets [PassengerPreStart](https://www.phusionpassenger.com/documentation/Users%20guide%20Apache.html#PassengerPreStart), the URL of the application if pre-starting is required.\n\n#####`php_admin_flags & values`\n\nAllows per-vhost setting [`php_admin_value`s or `php_admin_flag`s](http://php.net/manual/en/configuration.changes.php). These flags or values cannot be overwritten by a user or an application. Defaults to '[]'.\n\n#####`port`\n\nSets the port the host is configured on. The module's defaults ensure the host listens on port 80 for non-SSL vhosts and port 443 for SSL vhosts. The host only listens on the port set in this parameter. \n\n#####`priority`\n\nSets the relative load-order for Apache HTTPD VirtualHost configuration files. Defaults to '25'.\n\nIf nothing matches the priority, the first name-based vhost is used. Likewise, passing a higher priority causes the alphabetically first name-based vhost to be used if no other names match.\n\n*Note:* You should not need to use this parameter. However, if you do use it, be aware that the `default_vhost` parameter for `apache::vhost` passes a priority of '15'.\n\n#####`proxy_dest`\n\nSpecifies the destination address of a [ProxyPass](http://httpd.apache.org/docs/current/mod/mod_proxy.html#proxypass) configuration. Defaults to 'undef'.\n\n#####`proxy_pass`\n\nSpecifies an array of `path => URI` for a [ProxyPass](http://httpd.apache.org/docs/current/mod/mod_proxy.html#proxypass) configuration. Defaults to 'undef'. Optionally parameters can be added as an array.\n\n```puppet\napache::vhost { 'site.name.fdqn':\n  …\n  proxy_pass => [\n    { 'path' => '/a', 'url' => 'http://backend-a/' },\n    { 'path' => '/b', 'url' => 'http://backend-b/' },\n    { 'path' => '/c', 'url' => 'http://backend-a/c', 'params' => 'max=20 ttl=120 retry=300' },\n    { 'path' => '/l', 'url' => 'http://backend-xy',\n      'reverse_urls' => ['http://backend-x', 'http://backend-y'] },\n    { 'path' => '/d', 'url' => 'http://backend-a/d',\n      'params' => { 'retry' => '0', 'timeout' => '5' }, },\n    { 'path' => '/e', 'url' => 'http://backend-a/e',\n      'keywords' => ['nocanon', 'interpolate'] },\n  ],\n}\n```\n\n`reverse_urls` is optional and can be an array or a string. It is useful when used with `mod_proxy_balancer`.\n`params` is an optional parameter. It allows to provide the ProxyPass key=value parameters (Connection settings).\n\n#####`rack_base_uris`\n\nSpecifies the resource identifiers for a rack configuration. The file paths specified are listed as rack application roots for [Phusion Passenger](http://www.modrails.com/documentation/Users%20guide%20Apache.html#_railsbaseuri_and_rackbaseuri) in the _rack.erb template. Defaults to 'undef'.\n\n#####`redirect_dest`\n\nSpecifies the address to redirect to. Defaults to 'undef'.\n\n#####`redirect_source`\n\nSpecifies the source URIs that redirect to the destination specified in `redirect_dest`. If more than one item for redirect is supplied, the source and destination must be the same length, and the items are order-dependent. \n\n```puppet\n    apache::vhost { 'site.name.fdqn':\n      …\n      redirect_source => ['/images','/downloads'],\n      redirect_dest   => ['http://img.example.com/','http://downloads.example.com/'],\n    }\n```\n\n#####`redirect_status`\n\nSpecifies the status to append to the redirect. Defaults to 'undef'.\n\n```puppet\n    apache::vhost { 'site.name.fdqn':\n      …\n      redirect_status => ['temp','permanent'],\n    }\n```\n\n#####`redirectmatch_regexp` & `redirectmatch_status` & `redirectmatch_dest`\n\nDetermines which server status should be raised for a given regular expression and where to forward the user to. Entered as arrays. Defaults to 'undef'.\n\n```puppet\n    apache::vhost { 'site.name.fdqn':\n      …\n      redirectmatch_status => ['404','404'],\n      redirectmatch_regexp => ['\\.git(/.*|$)/','\\.svn(/.*|$)'],\n      redirectmatch_dest => ['http://www.example.com/1','http://www.example.com/2'],\n    }\n```\n\n#####`request_headers`\n\nModifies collected [request headers](http://httpd.apache.org/docs/current/mod/mod_headers.html#requestheader) in various ways, including adding additional request headers, removing request headers, etc. Defaults to 'undef'.\n\n```puppet\n    apache::vhost { 'site.name.fdqn':\n      …\n      request_headers => [\n        'append MirrorID \"mirror 12\"',\n        'unset MirrorID',\n      ],\n    }\n```\n\n#####`rewrites`\n\nCreates URL rewrite rules. Expects an array of hashes, and the hash keys can be any of 'comment', 'rewrite_base', 'rewrite_cond', or 'rewrite_rule'. Defaults to 'undef'.\n\nFor example, you can specify that anyone trying to access index.html is served welcome.html\n\n```puppet\n    apache::vhost { 'site.name.fdqn':\n      …\n      rewrites => [ { rewrite_rule => ['^index\\.html$ welcome.html'] } ]\n    }\n```\n\nThe parameter allows rewrite conditions that, when true, execute the associated rule. For instance, if you wanted to rewrite URLs only if the visitor is using IE\n\n```puppet\n    apache::vhost { 'site.name.fdqn':\n      …\n      rewrites => [\n        {\n          comment      => 'redirect IE',\n          rewrite_cond => ['%{HTTP_USER_AGENT} ^MSIE'],\n          rewrite_rule => ['^index\\.html$ welcome.html'],\n        },\n      ],\n    }\n```\n\nYou can also apply multiple conditions. For instance, rewrite index.html to welcome.html only when the browser is Lynx or Mozilla (version 1 or 2)\n\n```puppet\n    apache::vhost { 'site.name.fdqn':\n      …\n      rewrites => [\n        {\n          comment      => 'Lynx or Mozilla v1/2',\n          rewrite_cond => ['%{HTTP_USER_AGENT} ^Lynx/ [OR]', '%{HTTP_USER_AGENT} ^Mozilla/[12]'],\n          rewrite_rule => ['^index\\.html$ welcome.html'],\n        },\n      ],\n    }\n```\n\nMultiple rewrites and conditions are also possible\n\n```puppet\n    apache::vhost { 'site.name.fdqn':\n      …\n      rewrites => [\n        {\n          comment      => 'Lynx or Mozilla v1/2',\n          rewrite_cond => ['%{HTTP_USER_AGENT} ^Lynx/ [OR]', '%{HTTP_USER_AGENT} ^Mozilla/[12]'],\n          rewrite_rule => ['^index\\.html$ welcome.html'],\n        },\n        {\n          comment      => 'Internet Explorer',\n          rewrite_cond => ['%{HTTP_USER_AGENT} ^MSIE'],\n          rewrite_rule => ['^index\\.html$ /index.IE.html [L]'],\n        },\n        {\n          rewrite_base => /apps/,\n          rewrite_rule => ['^index\\.cgi$ index.php', '^index\\.html$ index.php', '^index\\.asp$ index.html'],\n        },\n     ],\n    }\n```\n\nRefer to the [`mod_rewrite` documentation](http://httpd.apache.org/docs/current/mod/mod_rewrite.html) for more details on what is possible with rewrite rules and conditions.\n\n#####`scriptalias`\n\nDefines a directory of CGI scripts to be aliased to the path '/cgi-bin', for example: '/usr/scripts'. Defaults to 'undef'.\n\n#####`scriptaliases`\n\n*Note*: This parameter is deprecated in favour of the `aliases` parameter.\n\nPasses an array of hashes to the vhost to create either ScriptAlias or ScriptAliasMatch statements as per the [`mod_alias` documentation](http://httpd.apache.org/docs/current/mod/mod_alias.html). These hashes are formatted as follows:\n\n```puppet\n    scriptaliases => [\n      {\n        alias => '/myscript',\n        path  => '/usr/share/myscript',\n      },\n      {\n        aliasmatch => '^/foo(.*)',\n        path       => '/usr/share/fooscripts$1',\n      },\n      {\n        aliasmatch => '^/bar/(.*)',\n        path       => '/usr/share/bar/wrapper.sh/$1',\n      },\n      {\n        alias => '/neatscript',\n        path  => '/usr/share/neatscript',\n      },\n    ]\n```\n\nThe ScriptAlias and ScriptAliasMatch directives are created in the order specified. As with [Alias and AliasMatch](#aliases) directives, more specific aliases should come before more general ones to avoid shadowing.\n\n#####`serveradmin`\n\nSpecifies the email address Apache displays when it renders one of its error pages. Defaults to 'undef'.\n\n#####`serveraliases`\n\nSets the [ServerAliases](http://httpd.apache.org/docs/current/mod/core.html#serveralias) of the site. Defaults to '[]'.\n\n#####`servername`\n\nSets the servername corresponding to the hostname you connect to the virtual host at. Defaults to the title of the resource.\n\n#####`setenv`\n\nUsed by HTTPD to set environment variables for vhosts. Defaults to '[]'.\n\n#####`setenvif`\n\nUsed by HTTPD to conditionally set environment variables for vhosts. Defaults to '[]'.\n\n#####`suphp_addhandler`, `suphp_configpath`, & `suphp_engine`\n\nSet up a virtual host with [suPHP](http://suphp.org/DocumentationView.html?file=apache/CONFIG).\n\n`suphp_addhandler` defaults to 'php5-script' on RedHat and FreeBSD, and 'x-httpd-php' on Debian.\n\n`suphp_configpath` defaults to 'undef' on RedHat and FreeBSD, and '/etc/php5/apache2' on Debian.\n\n`suphp_engine` allows values 'on' or 'off'. Defaults to 'off'\n\nTo set up a virtual host with suPHP\n\n```puppet\n    apache::vhost { 'suphp.example.com':\n      port                => '80',\n      docroot             => '/home/appuser/myphpapp',\n      suphp_addhandler    => 'x-httpd-php',\n      suphp_engine        => 'on',\n      suphp_configpath    => '/etc/php5/apache2',\n      directories         => { path => '/home/appuser/myphpapp',\n        'suphp'           => { user => 'myappuser', group => 'myappgroup' },\n      }\n    }\n```\n\n#####`vhost_name`\n\nEnables name-based virtual hosting. If no IP is passed to the virtual host, but the vhost is assigned a port, then the vhost name is 'vhost_name:port'. If the virtual host has no assigned IP or port, the vhost name is set to the title of the resource. Defaults to '*'.\n\n#####`virtual_docroot`\n\nSets up a virtual host with a wildcard alias subdomain mapped to a directory with the same name. For example, 'http://example.com' would map to '/var/www/example.com'. Defaults to 'false'.\n\n```puppet\n    apache::vhost { 'subdomain.loc':\n      vhost_name       => '*',\n      port             => '80',\n      virtual_docroot' => '/var/www/%-2+',\n      docroot          => '/var/www',\n      serveraliases    => ['*.loc',],\n    }\n```\n\n#####`wsgi_daemon_process`, `wsgi_daemon_process_options`, `wsgi_process_group`, `wsgi_script_aliases`, & `wsgi_pass_authorization`\n\nSet up a virtual host with [WSGI](https://code.google.com/p/modwsgi/).\n\n`wsgi_daemon_process` sets the name of the WSGI daemon. It is a hash, accepting [these keys](http://modwsgi.readthedocs.org/en/latest/configuration-directives/WSGIDaemonProcess.html), and it defaults to 'undef'.\n\n`wsgi_daemon_process_options` is optional and defaults to 'undef'.\n\n`wsgi_process_group` sets the group ID the virtual host runs under. Defaults to 'undef'.\n\n`wsgi_script_aliases` requires a hash of web paths to filesystem .wsgi paths. Defaults to 'undef'.\n\n`wsgi_pass_authorization` the WSGI application handles authorisation instead of Apache when set to 'On'. For more information see [here] (http://modwsgi.readthedocs.org/en/latest/configuration-directives/WSGIPassAuthorization.html).  Defaults to 'undef' where apache sets the defaults setting to 'Off'.\n\n`wsgi_chunked_request` enables support for chunked requests. Defaults to 'undef'.\n\nTo set up a virtual host with WSGI\n\n```puppet\n    apache::vhost { 'wsgi.example.com':\n      port                        => '80',\n      docroot                     => '/var/www/pythonapp',\n      wsgi_daemon_process         => 'wsgi',\n      wsgi_daemon_process_options =>\n        { processes    => '2',\n          threads      => '15',\n          display-name => '%{GROUP}',\n         },\n      wsgi_process_group          => 'wsgi',\n      wsgi_script_aliases         => { '/' => '/var/www/demo.wsgi' },\n      wsgi_chunked_request        => 'On',\n    }\n```\n\n####Parameter `directories` for `apache::vhost`\n\nThe `directories` parameter within the `apache::vhost` class passes an array of hashes to the vhost to create [Directory](http://httpd.apache.org/docs/current/mod/core.html#directory), [File](http://httpd.apache.org/docs/current/mod/core.html#files), and [Location](http://httpd.apache.org/docs/current/mod/core.html#location) directive blocks. These blocks take the form, '< Directory /path/to/directory>...< /Directory>'.\n\nThe `path` key sets the path for the directory, files, and location blocks. Its value must be a path for the 'directory', 'files', and 'location' providers, or a regex for the 'directorymatch', 'filesmatch', or 'locationmatch' providers. Each hash passed to `directories` **must** contain `path` as one of the keys. \n\nThe `provider` key is optional. If missing, this key defaults to 'directory'. Valid values for `provider` are 'directory', 'files', 'location', 'directorymatch', 'filesmatch', or 'locationmatch'. If you set `provider` to 'directorymatch', it uses the keyword 'DirectoryMatch' in the Apache config file. \n\nGeneral `directories` usage looks something like\n\n```puppet\n    apache::vhost { 'files.example.net':\n      docroot     => '/var/www/files',\n      directories => [\n        { 'path'     => '/var/www/files',\n          'provider' => 'files',\n          'deny'     => 'from all'\n         },\n      ],\n    }\n```\n\n*Note:* At least one directory should match the `docroot` parameter. After you start declaring directories, `apache::vhost` assumes that all required Directory blocks will be declared. If not defined, a single default Directory block is created that matches the `docroot` parameter.\n\nAvailable handlers, represented as keys, should be placed within the `directory`,`'files`, or `location` hashes.  This looks like\n\n```puppet\n    apache::vhost { 'sample.example.net':\n      docroot     => '/path/to/directory',\n      directories => [ { path => '/path/to/directory', handler => value } ],\n}\n```\n\nAny handlers you do not set in these hashes are considered 'undefined' within Puppet and are not added to the virtual host, resulting in the module using their default values. Supported handlers are: \n\n######`addhandlers`\n\nSets [AddHandler](http://httpd.apache.org/docs/current/mod/mod_mime.html#addhandler) directives, which map filename extensions to the specified handler. Accepts a list of hashes, with `extensions` serving to list the extensions being managed by the handler, and takes the form: `{ handler => 'handler-name', extensions => ['extension']}`.\n\n```puppet\n    apache::vhost { 'sample.example.net':\n      docroot     => '/path/to/directory',\n      directories => [\n        { path        => '/path/to/directory',\n          addhandlers => [{ handler => 'cgi-script', extensions => ['.cgi']}],\n        },\n      ],\n    }\n```\n\n######`allow`\n\nSets an [Allow](http://httpd.apache.org/docs/2.2/mod/mod_authz_host.html#allow) directive, which groups authorizations based on hostnames or IPs. **Deprecated:** This parameter is being deprecated due to a change in Apache. It only works with Apache 2.2 and lower. You can use it as a single string for one rule or as an array for more than one.\n\n```puppet\n    apache::vhost { 'sample.example.net':\n      docroot     => '/path/to/directory',\n      directories => [\n        { path  => '/path/to/directory',\n          allow => 'from example.org',\n        },\n      ],\n    }\n```\n\n######`allow_override`\n\nSets the types of directives allowed in [.htaccess](http://httpd.apache.org/docs/current/mod/core.html#allowoverride) files. Accepts an array.\n\n```puppet\n    apache::vhost { 'sample.example.net':\n      docroot      => '/path/to/directory',\n      directories  => [\n        { path           => '/path/to/directory',\n          allow_override => ['AuthConfig', 'Indexes'],\n        },\n      ],\n    }\n```\n\n######`auth_basic_authoritative`\n\nSets the value for [AuthBasicAuthoritative](https://httpd.apache.org/docs/current/mod/mod_auth_basic.html#authbasicauthoritative), which determines whether authorization and authentication are passed to lower level Apache modules.\n\n######`auth_basic_fake`\n\nSets the value for [AuthBasicFake](http://httpd.apache.org/docs/current/mod/mod_auth_basic.html#authbasicfake), which statically configures authorization credentials for a given directive block.\n\n######`auth_basic_provider`\n\nSets the value for [AuthBasicProvider] (http://httpd.apache.org/docs/current/mod/mod_auth_basic.html#authbasicprovider), which sets the authentication provider for a given location.\n\n######`auth_digest_algorithm`\n\nSets the value for [AuthDigestAlgorithm](http://httpd.apache.org/docs/current/mod/mod_auth_digest.html#authdigestalgorithm), which selects the algorithm used to calculate the challenge and response hashes.\n\n######`auth_digest_domain`\n\nSets the value for [AuthDigestDomain](http://httpd.apache.org/docs/current/mod/mod_auth_digest.html#authdigestdomain), which allows you to specify one or more URIs in the same protection space for digest authentication.\n\n######`auth_digest_nonce_lifetime`\n\nSets the value for [AuthDigestNonceLifetime](http://httpd.apache.org/docs/current/mod/mod_auth_digest.html#authdigestnoncelifetime), which controls how long the server nonce is valid.\n\n######`auth_digest_provider`\n\nSets the value for [AuthDigestProvider](http://httpd.apache.org/docs/current/mod/mod_auth_digest.html#authdigestprovider), which sets the authentication provider for a given location.\n\n######`auth_digest_qop`\n\nSets the value for [AuthDigestQop](http://httpd.apache.org/docs/current/mod/mod_auth_digest.html#authdigestqop), which determines the quality-of-protection to use in digest authentication.\n\n######`auth_digest_shmem_size`\n\nSets the value for [AuthAuthDigestShmemSize](http://httpd.apache.org/docs/current/mod/mod_auth_digest.html#authdigestshmemsize), which defines the amount of shared memory allocated to the server for keeping track of clients.\n\n######`auth_group_file`\n\nSets the value for [AuthGroupFile](https://httpd.apache.org/docs/current/mod/mod_authz_groupfile.html#authgroupfile), which sets the name of the text file containing the list of user groups for authorization.\n\n######`auth_name`\n\nSets the value for [AuthName](http://httpd.apache.org/docs/current/mod/mod_authn_core.html#authname), which sets the name of the authorization realm.\n\n######`auth_require`\n\nSets the entity name you're requiring to allow access. Read more about [Require](http://httpd.apache.org/docs/current/mod/mod_authz_host.html#requiredirectives).\n\n######`auth_type`\n\nSets the value for [AuthType](http://httpd.apache.org/docs/current/mod/mod_authn_core.html#authtype), which guides the type of user authentication.\n\n######`auth_user_file`\n\nSets the value for [AuthUserFile](http://httpd.apache.org/docs/current/mod/mod_authn_file.html#authuserfile), which sets the name of the text file containing the users/passwords for authentication.\n\n######`custom_fragment`\n\nPass a string of custom configuration directives to be placed at the end of the directory configuration.\n\n```puppet\n  apache::vhost { 'monitor':\n    …\n    custom_fragment => '\n  <Location /balancer-manager>\n    SetHandler balancer-manager\n    Order allow,deny\n    Allow from all\n  </Location>\n  <Location /server-status>\n    SetHandler server-status\n    Order allow,deny\n    Allow from all\n  </Location>\n  ProxyStatus On',\n}\n```\n\n######`deny`\n\nSets a [Deny](http://httpd.apache.org/docs/2.2/mod/mod_authz_host.html#deny) directive, specifying which hosts are denied access to the server. **Deprecated:** This parameter is being deprecated due to a change in Apache. It only works with Apache 2.2 and lower. \n\n```puppet\n    apache::vhost { 'sample.example.net':\n      docroot     => '/path/to/directory',\n      directories => [\n        { path => '/path/to/directory',\n          deny => 'from example.org',\n        },\n      ],\n    }\n```\n\n######`error_documents`\n\nAn array of hashes used to override the [ErrorDocument](https://httpd.apache.org/docs/current/mod/core.html#errordocument) settings for the directory.\n\n```puppet\n    apache::vhost { 'sample.example.net':\n      directories => [\n        { path            => '/srv/www',\n          error_documents => [\n            { 'error_code' => '503',\n              'document'   => '/service-unavail',\n            },\n          ],\n        },\n      ],\n    }\n```\n\n######`headers`\n\nAdds lines for [Header](http://httpd.apache.org/docs/current/mod/mod_headers.html#header) directives.\n\n```puppet\n    apache::vhost { 'sample.example.net':\n      docroot     => '/path/to/directory',\n      directories => {\n        path    => '/path/to/directory',\n        headers => 'Set X-Robots-Tag \"noindex, noarchive, nosnippet\"',\n      },\n    }\n```\n\n######`index_options`\n\nAllows configuration settings for [directory indexing](http://httpd.apache.org/docs/current/mod/mod_autoindex.html#indexoptions).\n\n```puppet\n    apache::vhost { 'sample.example.net':\n      docroot     => '/path/to/directory',\n      directories => [\n        { path          => '/path/to/directory',\n          options       => ['Indexes','FollowSymLinks','MultiViews'],\n          index_options => ['IgnoreCase', 'FancyIndexing', 'FoldersFirst', 'NameWidth=*', 'DescriptionWidth=*', 'SuppressHTMLPreamble'],\n        },\n      ],\n    }\n```\n\n######`index_order_default`\n\nSets the [default ordering](http://httpd.apache.org/docs/current/mod/mod_autoindex.html#indexorderdefault) of the directory index.\n\n```puppet\n    apache::vhost { 'sample.example.net':\n      docroot     => '/path/to/directory',\n      directories => [\n        { path                => '/path/to/directory',\n          order               => 'Allow,Deny',\n          index_order_default => ['Descending', 'Date'],\n        },\n      ],\n    }\n```\n\n######`options`\n\nLists the [Options](http://httpd.apache.org/docs/current/mod/core.html#options) for the given Directory block.\n\n```puppet\n    apache::vhost { 'sample.example.net':\n      docroot     => '/path/to/directory',\n      directories => [\n        { path    => '/path/to/directory',\n          options => ['Indexes','FollowSymLinks','MultiViews'],\n        },\n      ],\n    }\n```\n\n######`order`\n\nSets the order of processing Allow and Deny statements as per [Apache core documentation](http://httpd.apache.org/docs/2.2/mod/mod_authz_host.html#order). **Deprecated:** This parameter is being deprecated due to a change in Apache. It only works with Apache 2.2 and lower.\n\n```puppet\n    apache::vhost { 'sample.example.net':\n      docroot     => '/path/to/directory',\n      directories => [\n        { path  => '/path/to/directory',\n          order => 'Allow,Deny',\n        },\n      ],\n    }\n```\n\n######`passenger_enabled`\n\nSets the value for the [PassengerEnabled](http://www.modrails.com/documentation/Users%20guide%20Apache.html#PassengerEnabled) directory to 'on' or 'off'. Requires `apache::mod::passenger` to be included.\n\n```puppet\n    apache::vhost { 'sample.example.net':\n      docroot     => '/path/to/directory',\n      directories => [ \n        { path              => '/path/to/directory', \n          passenger_enabled => 'on',\n        }, \n      ],\n    }\n```\n\n*Note:* Be aware that there is an [issue](http://www.conandalton.net/2010/06/passengerenabled-off-not-working.html) using the PassengerEnabled directive with the PassengerHighPerformance directive.\n\n######`php_admin_value` and `php_admin_flag`\n\n`php_admin_value` sets the value of the directory, and `php_admin_flag` uses a boolean to configure the directory. Further information can be found [here](http://php.net/manual/en/configuration.changes.php).\n\n\n######`satisfy`\n\nSets a `Satisfy` directive as per the [Apache Core documentation](http://httpd.apache.org/docs/2.2/mod/core.html#satisfy). **Deprecated:** This parameter is being deprecated due to a change in Apache. It only works with Apache 2.2 and lower.\n\n```puppet\n    apache::vhost { 'sample.example.net':\n      docroot     => '/path/to/directory',\n      directories => [\n        { path    => '/path/to/directory',\n          satisfy => 'Any',\n        }\n      ],\n    }\n```\n\n######`sethandler`\n\nSets a `SetHandler` directive as per the [Apache Core documentation](http://httpd.apache.org/docs/2.2/mod/core.html#sethandler). An example:\n\n```puppet\n    apache::vhost { 'sample.example.net':\n      docroot     => '/path/to/directory',\n      directories => [ \n        { path       => '/path/to/directory', \n          sethandler => 'None', \n        }\n      ],\n    }\n```\n\n######`rewrites`\n\nCreates URL [`rewrites`](#rewrites) rules in vhost directories. Expects an array of hashes, and the hash keys can be any of 'comment', 'rewrite_base', 'rewrite_cond', or 'rewrite_rule'.\n\n```puppet\n    apache::vhost { 'secure.example.net':\n      docroot     => '/path/to/directory',\n      directories => [\n        { path        => '/path/to/directory',\n          rewrites => [ { comment      => 'Permalink Rewrites',\n                          rewrite_base => '/'\n                        },\n                        { rewrite_rule => [ '^index\\.php$ - [L]' ]\n                        },\n                        { rewrite_cond => [ '%{REQUEST_FILENAME} !-f',\n                                            '%{REQUEST_FILENAME} !-d',\n                                          ],\n                          rewrite_rule => [ '. /index.php [L]' ],\n                        }\n                      ],\n        },\n      ],\n    }\n```\n\n***Note*** If you include rewrites in your directories make sure you are also including `apache::mod::rewrite`. You may also want to consider setting the rewrites using the `rewrites` parameter in `apache::vhost` rather than setting the rewrites in the vhost directories.\n\n######`shib_request_setting`\n\nAllows an valid content setting to be set or altered for the application request. This command takes two parameters, the name of the content setting, and the value to set it to.Check the Shibboleth [content setting documentation](https://wiki.shibboleth.net/confluence/display/SHIB2/NativeSPContentSettings) for valid settings. This key is disabled if `apache::mod::shib` is not defined. Check the [`mod_shib` documentation](https://wiki.shibboleth.net/confluence/display/SHIB2/NativeSPApacheConfig#NativeSPApacheConfig-Server/VirtualHostOptions) for more details.\n\n```puppet\n    apache::vhost { 'secure.example.net':\n      docroot     => '/path/to/directory',\n      directories => [\n        { path                  => '/path/to/directory',\n          shib_require_setting  => 'requiresession 1',\n          shib_use_headers      => 'On',\n        },\n      ],\n    }\n```\n\n######`shib_use_headers`\n\nWhen set to 'On' this turns on the use of request headers to publish attributes to applications. Valid values for this key is 'On' or 'Off', and the default value is 'Off'. This key is disabled if `apache::mod::shib` is not defined. Check the [`mod_shib` documentation](https://wiki.shibboleth.net/confluence/display/SHIB2/NativeSPApacheConfig#NativeSPApacheConfig-Server/VirtualHostOptions) for more details. \n\n######`ssl_options`\n\nString or list of [SSLOptions](https://httpd.apache.org/docs/current/mod/mod_ssl.html#ssloptions), which configure SSL engine run-time options. This handler takes precedence over SSLOptions set in the parent block of the vhost.\n\n```puppet\n    apache::vhost { 'secure.example.net':\n      docroot     => '/path/to/directory',\n      directories => [\n        { path        => '/path/to/directory',\n          ssl_options => '+ExportCertData',\n        },\n        { path        => '/path/to/different/dir',\n          ssl_options => [ '-StdEnvVars', '+ExportCertData'],\n        },\n      ],\n    }\n```\n\n######`suphp`\n\nA hash containing the 'user' and 'group' keys for the [suPHP_UserGroup](http://www.suphp.org/DocumentationView.html?file=apache/CONFIG) setting. It must be used with `suphp_engine => on` in the vhost declaration, and can only be passed within `directories`.\n\n```puppet\n    apache::vhost { 'secure.example.net':\n      docroot     => '/path/to/directory',\n      directories => [\n        { path  => '/path/to/directory',\n          suphp =>\n            { user  =>  'myappuser',\n              group => 'myappgroup',\n            },\n        },\n      ],\n    }\n```\n\n####SSL parameters for `apache::vhost`\n\nAll of the SSL parameters for `::vhost` default to whatever is set in the base `apache` class. Use the below parameters to tweak individual SSL settings for specific vhosts.\n\n#####`ssl`\n\nEnables SSL for the virtual host. SSL vhosts only respond to HTTPS queries. Valid values are 'true' or 'false'. Defaults to 'false'.\n\n#####`ssl_ca`\n\nSpecifies the SSL certificate authority. Defaults to 'undef'.\n\n#####`ssl_cert`\n\nSpecifies the SSL certification. Defaults are based on your OS: '/etc/pki/tls/certs/localhost.crt' for RedHat, '/etc/ssl/certs/ssl-cert-snakeoil.pem' for Debian, and '/usr/local/etc/apache22/server.crt' for FreeBSD.\n\n#####`ssl_protocol`\n\nSpecifies [SSLProtocol](http://httpd.apache.org/docs/current/mod/mod_ssl.html#sslprotocol). Defaults to 'undef'.\n\nIf you do not use this parameter, it uses the HTTPD default from ssl.conf.erb, 'all -SSLv2 -SSLv3'.\n\n#####`ssl_cipher`\n\nSpecifies [SSLCipherSuite](http://httpd.apache.org/docs/current/mod/mod_ssl.html#sslciphersuite). Defaults to 'undef'.\n\nIf you do not use this parameter, it uses the HTTPD default from ssl.conf.erb, 'HIGH:MEDIUM:!aNULL:!MD5'.\n\n#####`ssl_honorcipherorder`\n\nSets [SSLHonorCipherOrder](http://httpd.apache.org/docs/current/mod/mod_ssl.html#sslhonorcipherorder), which is used to prefer the server's cipher preference order. Defaults to 'On' in the base `apache` config.\n\n#####`ssl_certs_dir`\n\nSpecifies the location of the SSL certification directory. Defaults to '/etc/ssl/certs' on Debian, '/etc/pki/tls/certs' on RedHat, and '/usr/local/etc/apache22' on FreeBSD.\n\n#####`ssl_chain`\n\nSpecifies the SSL chain. Defaults to 'undef'. (This default works out of the box, but it must be updated in the base `apache` class with your specific certificate information before being used in production.)\n\n#####`ssl_crl`\n\nSpecifies the certificate revocation list to use. Defaults to 'undef'. (This default works out of the box but must be updated in the base `apache` class with your specific certificate information before being used in production.)\n\n#####`ssl_crl_path`\n\nSpecifies the location of the certificate revocation list. Defaults to 'undef'. (This default works out of the box but must be updated in the base `apache` class with your specific certificate information before being used in production.)\n\n#####`ssl_crl_check`\n\nSets the certificate revocation check level via the [SSLCARevocationCheck directive](http://httpd.apache.org/docs/current/mod/mod_ssl.html#sslcarevocationcheck), defaults to 'undef'. This default works out of the box but must be specified when using CRLs in production. Only applicable to Apache 2.4 or higher; the value is ignored on older versions.\n\n#####`ssl_key`\n\nSpecifies the SSL key. Defaults are based on your operating system: '/etc/pki/tls/private/localhost.key' for RedHat, '/etc/ssl/private/ssl-cert-snakeoil.key' for Debian, and '/usr/local/etc/apache22/server.key' for FreeBSD. (This default works out of the box but must be updated in the base `apache` class with your specific certificate information before being used in production.)\n\n#####`ssl_verify_client`\n\nSets the [SSLVerifyClient](http://httpd.apache.org/docs/current/mod/mod_ssl.html#sslverifyclient) directive, which sets the certificate verification level for client authentication. Valid values are: 'none', 'optional', 'require', and 'optional_no_ca'. Defaults to 'undef'.\n\n```puppet\n    apache::vhost { 'sample.example.net':\n      …\n      ssl_verify_client => 'optional',\n    }\n```\n\n#####`ssl_verify_depth`\n\nSets the [SSLVerifyDepth](http://httpd.apache.org/docs/current/mod/mod_ssl.html#sslverifydepth) directive, which specifies the maximum depth of CA certificates in client certificate verification. Defaults to 'undef'.\n\n```puppet\n    apache::vhost { 'sample.example.net':\n      …\n      ssl_verify_depth => 1,\n    }\n```\n\n#####`ssl_options`\n\nSets the [SSLOptions](http://httpd.apache.org/docs/current/mod/mod_ssl.html#ssloptions) directive, which configures various SSL engine run-time options. This is the global setting for the given vhost and can be a string or an array. Defaults to 'undef'.\n\nA string:\n\n```puppet\n    apache::vhost { 'sample.example.net':\n      …\n      ssl_options => '+ExportCertData',\n    }\n```\n\nAn array:\n\n```puppet\n    apache::vhost { 'sample.example.net':\n      …\n      ssl_options => [ '+StrictRequire', '+ExportCertData' ],\n    }\n```\n\n#####`ssl_proxyengine`\n\nSpecifies whether or not to use [SSLProxyEngine](http://httpd.apache.org/docs/current/mod/mod_ssl.html#sslproxyengine). Valid values are 'true' and 'false'. Defaults to 'false'.\n\n####Defined Type: FastCGI Server\n\nThis type is intended for use with mod_fastcgi. It allows you to define one or more external FastCGI servers to handle specific file types.\n\nEx:\n\n```puppet\napache::fastcgi::server { 'php':\n  host       => '127.0.0.1:9000',\n  timeout    => 15,\n  flush      => false,\n  faux_path  => '/var/www/php.fcgi',\n  fcgi_alias => '/php.fcgi',\n  file_type  => 'application/x-httpd-php'\n}\n```\n\nWithin your virtual host, you can then configure the specified file type to be handled by the fastcgi server specified above.\n\n```puppet\napache::vhost { 'www':\n  ...\n  custom_fragment = 'AddType application/x-httpd-php .php'\n  ...\n}\n```\n\n#####`host`\n\nThe hostname or IP address and TCP port number (1-65535) of the FastCGI server.\n\n#####`timeout`\n\nThe number of seconds of FastCGI application inactivity allowed before the request is aborted and the event is logged (at the error LogLevel). The inactivity timer applies only as long as a connection is pending with the FastCGI application. If a request is queued to an application, but the application doesn't respond (by writing and flushing) within this period, the request is aborted. If communication is complete with the application but incomplete with the client (the response is buffered), the timeout does not apply.\n\n#####`flush`\n\nForce a write to the client as data is received from the application. By default, mod_fastcgi buffers data in order to free the application as quickly as possible.\n\n#####`faux_path`\n\n`faux_path` does not have to exist in the local filesystem. URIs that Apache resolves to this filename are handled by this external FastCGI application.\n\n#####`alias`\n\nA unique alias. This is used internally to link the action with the FastCGI server.\n\n#####`file_type`\n\nThe MIME-type of the file to be processed by the FastCGI server. \n\n###Virtual Host Examples\n\nThe apache module allows you to set up pretty much any configuration of virtual host you might need. This section addresses some common configurations, but look at the [Tests section](https://github.com/puppetlabs/puppetlabs-apache/tree/master/tests) for even more examples.\n\nConfigure a vhost with a server administrator\n\n```puppet\n    apache::vhost { 'third.example.com':\n      port        => '80',\n      docroot     => '/var/www/third',\n      serveradmin => 'admin@example.com',\n    }\n```\n\n- - -\n\nSet up a vhost with aliased servers\n\n```puppet\n    apache::vhost { 'sixth.example.com':\n      serveraliases => [\n        'sixth.example.org',\n        'sixth.example.net',\n      ],\n      port          => '80',\n      docroot       => '/var/www/fifth',\n    }\n```\n\n- - -\n\nConfigure a vhost with a cgi-bin\n\n```puppet\n    apache::vhost { 'eleventh.example.com':\n      port        => '80',\n      docroot     => '/var/www/eleventh',\n      scriptalias => '/usr/lib/cgi-bin',\n    }\n```\n\n- - -\n\nSet up a vhost with a rack configuration\n\n```puppet\n    apache::vhost { 'fifteenth.example.com':\n      port           => '80',\n      docroot        => '/var/www/fifteenth',\n      rack_base_uris => ['/rackapp1', '/rackapp2'],\n    }\n```\n\n- - -\n\nSet up a mix of SSL and non-SSL vhosts at the same domain\n\n```puppet\n    #The non-ssl vhost\n    apache::vhost { 'first.example.com non-ssl':\n      servername => 'first.example.com',\n      port       => '80',\n      docroot    => '/var/www/first',\n    }\n\n    #The SSL vhost at the same domain\n    apache::vhost { 'first.example.com ssl':\n      servername => 'first.example.com',\n      port       => '443',\n      docroot    => '/var/www/first',\n      ssl        => true,\n    }\n```\n\n- - -\n\nConfigure a vhost to redirect non-SSL connections to SSL\n\n```puppet\n    apache::vhost { 'sixteenth.example.com non-ssl':\n      servername      => 'sixteenth.example.com',\n      port            => '80',\n      docroot         => '/var/www/sixteenth',\n      redirect_status => 'permanent',\n      redirect_dest   => 'https://sixteenth.example.com/'\n    }\n    apache::vhost { 'sixteenth.example.com ssl':\n      servername => 'sixteenth.example.com',\n      port       => '443',\n      docroot    => '/var/www/sixteenth',\n      ssl        => true,\n    }\n```\n\n- - -\n\nSet up IP-based vhosts on any listen port and have them respond to requests on specific IP addresses. In this example, we set listening on ports 80 and 81. This is required because the example vhosts are not declared with a port parameter.\n\n```puppet\n    apache::listen { '80': }\n    apache::listen { '81': }\n```\n\nThen we set up the IP-based vhosts\n\n```puppet\n    apache::vhost { 'first.example.com':\n      ip       => '10.0.0.10',\n      docroot  => '/var/www/first',\n      ip_based => true,\n    }\n    apache::vhost { 'second.example.com':\n      ip       => '10.0.0.11',\n      docroot  => '/var/www/second',\n      ip_based => true,\n    }\n```\n\n- - -\n\nConfigure a mix of name-based and IP-based vhosts. First, we add two IP-based vhosts on 10.0.0.10, one SSL and one non-SSL\n\n```puppet\n    apache::vhost { 'The first IP-based vhost, non-ssl':\n      servername => 'first.example.com',\n      ip         => '10.0.0.10',\n      port       => '80',\n      ip_based   => true,\n      docroot    => '/var/www/first',\n    }\n    apache::vhost { 'The first IP-based vhost, ssl':\n      servername => 'first.example.com',\n      ip         => '10.0.0.10',\n      port       => '443',\n      ip_based   => true,\n      docroot    => '/var/www/first-ssl',\n      ssl        => true,\n    }\n```\n\nThen, we add two name-based vhosts listening on 10.0.0.20\n\n```puppet\n    apache::vhost { 'second.example.com':\n      ip      => '10.0.0.20',\n      port    => '80',\n      docroot => '/var/www/second',\n    }\n    apache::vhost { 'third.example.com':\n      ip      => '10.0.0.20',\n      port    => '80',\n      docroot => '/var/www/third',\n    }\n```\n\nIf you want to add two name-based vhosts so that they answer on either 10.0.0.10 or 10.0.0.20, you **MUST** declare `add_listen => 'false'` to disable the otherwise automatic 'Listen 80', as it conflicts with the preceding IP-based vhosts.\n\n```puppet\n    apache::vhost { 'fourth.example.com':\n      port       => '80',\n      docroot    => '/var/www/fourth',\n      add_listen => false,\n    }\n    apache::vhost { 'fifth.example.com':\n      port       => '80',\n      docroot    => '/var/www/fifth',\n      add_listen => false,\n    }\n```\n\n###Load Balancing\n\n####Defined Type: `apache::balancer`\n\n`apache::balancer` creates an Apache balancer cluster. Each balancer cluster needs one or more balancer members, which are declared with [`apache::balancermember`](#defined-type-apachebalancermember).\n\nOne `apache::balancer` defined resource should be defined for each Apache load balanced set of servers. The `apache::balancermember` resources for all balancer members can be exported and collected on a single Apache load balancer server using exported resources.\n\n**Parameters within `apache::balancer`:**\n\n#####`name`\n\nSets the balancer cluster's title. This parameter also sets the title of the conf.d file.\n\n#####`proxy_set`\n\nConfigures key-value pairs as [ProxySet](http://httpd.apache.org/docs/current/mod/mod_proxy.html#proxyset) lines. Accepts a hash, and defaults to '{}'.\n\n#####`collect_exported`\n\nDetermines whether or not to use exported resources. Valid values 'true' and 'false', defaults to 'true'.\n\nIf you statically declare all of your backend servers, you should set this to 'false' to rely on existing declared balancer member resources. Also make sure to use `apache::balancermember` with array arguments.\n\nIf you wish to dynamically declare your backend servers via [exported resources](http://docs.puppetlabs.com/guides/exported_resources.html) collected on a central node, you must set this parameter to 'true' in order to collect the exported balancer member resources that were exported by the balancer member nodes.\n\nIf you choose not to use exported resources, all balancer members will be configured in a single Puppet run. If you are using exported resources, Puppet has to run on the balanced nodes, then run on the balancer.\n\n####Defined Type: `apache::balancermember`\n\nDefines members of [mod_proxy_balancer](http://httpd.apache.org/docs/current/mod/mod_proxy_balancer.html), which sets up a balancer member inside a listening service configuration block in etc/apache/apache.cfg on the load balancer.\n\n**Parameters within `apache::balancermember`:**\n\n#####`name`\n\nSets the title of the resource. This name also sets the name of the concat fragment.\n\n#####`balancer_cluster`\n\nSets the Apache service's instance name. This must match the name of a declared `apache::balancer` resource. Required.\n\n#####`url`\n\nSpecifies the URL used to contact the balancer member server. Defaults to 'http://${::fqdn}/'.\n\n#####`options`\n\nAn array of [options](http://httpd.apache.org/docs/2.2/mod/mod_proxy.html#balancermember) to be specified after the URL. Accepts any key-value pairs available to [ProxyPass](http://httpd.apache.org/docs/2.2/mod/mod_proxy.html#proxypass).\n\n####Examples\n\nTo load balance with exported resources, export the `balancermember` from the balancer member\n\n```puppet\n      @@apache::balancermember { \"${::fqdn}-puppet00\":\n        balancer_cluster => 'puppet00',\n        url              => \"ajp://${::fqdn}:8009\"\n        options          => ['ping=5', 'disablereuse=on', 'retry=5', 'ttl=120'],\n      }\n```\n\nThen, on the proxy server, create the balancer cluster\n\n```puppet\n      apache::balancer { 'puppet00': }\n```\n\nTo load balance without exported resources, declare the following on the proxy\n\n```puppet\n    apache::balancer { 'puppet00': }\n    apache::balancermember { \"${::fqdn}-puppet00\":\n        balancer_cluster => 'puppet00',\n        url              => \"ajp://${::fqdn}:8009\"\n        options          => ['ping=5', 'disablereuse=on', 'retry=5', 'ttl=120'],\n      }\n```\n\nThen declare `apache::balancer` and `apache::balancermember` on the proxy server.\n\nIf you need to use ProxySet in the balancer config\n\n```puppet\n      apache::balancer { 'puppet01':\n        proxy_set => {'stickysession' => 'JSESSIONID'},\n      }\n```\n\n##Reference\n\n###Classes\n\n####Public Classes\n\n* [`apache`](#class-apache): Guides the basic setup of Apache.\n* `apache::dev`: Installs Apache development libraries. (*Note:* On FreeBSD, you must declare `apache::package` or `apache` before `apache::dev`.)\n* [`apache::mod::[name]`](#classes-apachemodname): Enables specific Apache HTTPD modules.\n\n####Private Classes\n\n* `apache::confd::no_accf`: Creates the no-accf.conf configuration file in conf.d, required by FreeBSD's Apache 2.4.\n* `apache::default_confd_files`: Includes conf.d files for FreeBSD.\n* `apache::default_mods`: Installs the Apache modules required to run the default configuration.\n* `apache::package`: Installs and configures basic Apache packages.\n* `apache::params`: Manages Apache parameters.\n* `apache::service`: Manages the Apache daemon.\n\n###Defined Types\n\n####Public Defined Types\n\n* `apache::balancer`: Creates an Apache balancer cluster.\n* `apache::balancermember`: Defines members of [mod_proxy_balancer](http://httpd.apache.org/docs/current/mod/mod_proxy_balancer.html).\n* `apache::listen`: Based on the title, controls which ports Apache binds to for listening. Adds [Listen](http://httpd.apache.org/docs/current/bind.html) directives to ports.conf in the Apache HTTPD configuration directory. Titles take the form '<port>', '<ipv4>:<port>', or '<ipv6>:<port>'.\n* `apache::mod`: Used to enable arbitrary Apache HTTPD modules for which there is no specific `apache::mod::[name]` class.\n* `apache::namevirtualhost`: Enables name-based hosting of a virtual host. Adds all [NameVirtualHost](http://httpd.apache.org/docs/current/vhosts/name-based.html) directives to the `ports.conf` file in the Apache HTTPD configuration directory. Titles take the form '\\*', '*:<port>', '\\_default_:<port>, '<ip>', or '<ip>:<port>'.\n* `apache::vhost`: Allows specialized configurations for virtual hosts that have requirements outside the defaults.\n\n####Private Defined Types\n\n* `apache::peruser::multiplexer`: Enables the [Peruser](http://www.freebsd.org/cgi/url.cgi?ports/www/apache22-peruser-mpm/pkg-descr) module for FreeBSD only.\n* `apache::peruser::processor`: Enables the [Peruser](http://www.freebsd.org/cgi/url.cgi?ports/www/apache22-peruser-mpm/pkg-descr) module for FreeBSD only.\n\n###Templates\n\nThe Apache module relies heavily on templates to enable the `vhost` and `apache::mod` defined types. These templates are built based on Facter facts around your operating system. Unless explicitly called out, most templates are not meant for configuration.\n\n##Limitations\n\n###Ubuntu 10.04\n\nThe `apache::vhost::WSGIImportScript` parameter creates a statement inside the VirtualHost which is unsupported on older versions of Apache, causing this to fail.  This will be remedied in a future refactoring.\n\n###RHEL/CentOS 5\n\nThe `apache::mod::passenger` and `apache::mod::proxy_html` classes are untested since repositories are missing compatible packages.\n\n###RHEL/CentOS 7\n\nThe `apache::mod::passenger` class is untested as the repository does not have packages for EL7 yet.  The fact that passenger packages aren't available also makes us unable to test the `rack_base_uri` parameter in `apache::vhost`.\n\n###General\n\nThis module is CI tested on Centos 5 & 6, Ubuntu 12.04 & 14.04, Debian 7, and RHEL 5, 6 & 7 platforms against both the OSS and Enterprise version of Puppet.\n\nThe module contains support for other distributions and operating systems, such as FreeBSD and Amazon Linux, but is not formally tested on those and regressions can occur.\n\n###SELinux and Custom Paths\n\nIf you are running with SELinux in enforcing mode and want to use custom paths for your `logroot`, `mod_dir`, `vhost_dir`, and `docroot`, you need to manage the context for the files yourself.\n\nSomething along the lines of:\n\n```puppet\n        exec { 'set_apache_defaults':\n          command => 'semanage fcontext -a -t httpd_sys_content_t \"/custom/path(/.*)?\"',\n          path    => '/bin:/usr/bin/:/sbin:/usr/sbin',\n          require => Package['policycoreutils-python'],\n        }\n        package { 'policycoreutils-python': ensure => installed }\n        exec { 'restorecon_apache':\n          command => 'restorecon -Rv /apache_spec',\n          path    => '/bin:/usr/bin/:/sbin:/usr/sbin',\n          before  => Service['httpd'],\n          require => Class['apache'],\n        }\n        class { 'apache': }\n        host { 'test.server': ip => '127.0.0.1' }\n        file { '/custom/path': ensure => directory, }\n        file { '/custom/path/include': ensure => present, content => '#additional_includes' }\n        apache::vhost { 'test.server':\n          docroot             => '/custom/path',\n          additional_includes => '/custom/path/include',\n        }\n```\n\nYou need to set the contexts using `semanage fcontext` not `chcon` because `file {...}` resources reset the context to the values in the database if the resource isn't specifying the context.\n\n##Development\n\n###Contributing\n\nPuppet Labs modules on the Puppet Forge are open projects, and community contributions are essential for keeping them great. We can’t access the huge number of platforms and myriad of hardware, software, and deployment configurations that Puppet is intended to serve.\n\nWe want to keep it as easy as possible to contribute changes so that our modules work in your environment. There are a few guidelines that we need contributors to follow so that we can have a chance of keeping on top of things.\n\nYou can read the complete module contribution guide [on the Puppet Labs wiki.](http://projects.puppetlabs.com/projects/module-site/wiki/Module_contributing)\n\n###Running tests\n\nThis project contains tests for both [rspec-puppet](http://rspec-puppet.com/) and [beaker-rspec](https://github.com/puppetlabs/beaker-rspec) to verify functionality. For in-depth information please see their respective documentation.\n\nQuickstart:\n\n    gem install bundler\n    bundle install\n    bundle exec rake spec\n    bundle exec rspec spec/acceptance\n    RS_DEBUG=yes bundle exec rspec spec/acceptance\n",
      "changelog": "##2014-09-30 - Supported Release 1.2.0\n###Summary\n\nThis release features many improvements and bugfixes, including several new defines, a reworking of apache::vhost for more extensibility, and many new parameters for more customization. This release also includes improved support for strict variables and the future parser.\n\n####Features\n- Convert apache::vhost to use concat for easier extensions\n- Test improvements\n- Synchronize files with modulesync\n- Strict variable and future parser support\n- Added apache::custom_config defined type to allow validation of configs before they are created\n- Added bool2httpd function to convert true/false to apache 'On' and 'Off'. Intended for internal use in the module.\n- Improved SCL support\n  - allow overriding of the mod_ssl package name\n- Add support for reverse_urls/ProxyPassReverse in apache::vhost\n- Add satisfy directive in apache::vhost::directories\n- Add apache::fastcgi::server defined type\n- New parameters - apache\n  - allow_encoded_slashes\n  - apache_name\n  - conf_dir\n  - default_ssl_crl_check\n  - docroot\n  - logroot_mode\n  - purge_vhost_dir\n- New parameters - apache::vhost\n  - add_default_charset\n  - allow_encoded_slashes\n  - logroot_ensure\n  - logroot_mode\n  - manage_docroot\n  - passenger_app_root\n  - passenger_min_instances\n  - passenger_pre_start\n  - passenger_ruby\n  - passenger_start_timeout\n  - proxy_preserve_host\n  - redirectmatch_dest\n  - ssl_crl_check\n  - wsgi_chunked_request\n  - wsgi_pass_authorization\n- Add support for ScriptAlias and ScriptAliasMatch in the apache::vhost::aliases parameter\n- Add support for rewrites in the apache::vhost::directories parameter\n- If the service_ensure parameter in apache::service is set to anything other than true, false, running, or stopped, ensure will not be passed to the service resource, allowing for the service to not be managed by puppet\n- Turn of SSLv3 by default\n- Improvements to apache::mod*\n  - Add restrict_access parameter to apache::mod::info\n  - Add force_language_priority and language_priority parameters to apache::mod::negotiation\n  - Add threadlimit parameter to apache::mod::worker\n  - Add content, template, and source parameters to apache::mod::php\n  - Add mod_authz_svn support via the authz_svn_enabled parameter in apache::mod::dav_svn\n  - Add loadfile_name parameter to apache::mod\n  - Add apache::mod::deflate class\n  - Add options parameter to apache::mod::fcgid\n  - Add timeouts parameter to apache::mod::reqtimeout\n  - Add apache::mod::shib\n  - Add apache_version parameter to apache::mod::ldap\n  - Add magic_file parameter to apache::mod::mime_magic\n  - Add apache_version parameter to apache::mod::pagespeed\n  - Add passenger_default_ruby parameter to apache::mod::passenger\n  - Add content, template, and source parameters to apache::mod::php\n  - Add apache_version parameter to apache::mod::proxy\n  - Add loadfiles parameter to apache::mod::proxy_html\n  - Add ssl_protocol and package_name parameters to apache::mod::ssl\n  - Add apache_version parameter to apache::mod::status\n  - Add apache_version parameter to apache::mod::userdir\n  - Add apache::mod::version class\n\n####Bugfixes\n- Set osfamily defaults for wsgi_socket_prefix\n- Support multiple balancermembers with the same url\n- Validate apache::vhost::custom_fragment\n- Add support for itk with mod_php\n- Allow apache::vhost::ssl_certs_dir to not be set\n- Improved passenger support for Debian\n- Improved 2.4 support without mod_access_compat\n- Support for more than one 'Allow from'-directive in _directories.erb\n- Don't load systemd on Amazon linux based on CentOS6 with apache 2.4\n- Fix missing newline in ModPagespeed filter and memcached servers directive\n- Use interpolated strings instead of numbers where required by future parser\n- Make auth_require take precedence over default with apache 2.4\n- Lint fixes\n- Set default for php_admin_flags and php_admin_values to be empty hash instead of empty array\n- Correct typo in mod::pagespeed\n- spec_helper fixes\n- Install mod packages before dealing with the configuration\n- Use absolute scope to check class definition in apache::mod::php\n- Fix dependency loop in apache::vhost\n- Properly scope variables in the inline template in apache::balancer\n- Documentation clarification, typos, and formatting\n- Set apache::mod::ssl::ssl_mutex to default for debian on apache >= 2.4\n- Strict variables fixes\n- Add authn_core mode to Ubuntu trusty defaults\n- Keep default loadfile for authz_svn on Debian\n- Remove '.conf' from the site-include regexp for better Ubuntu/Debian support\n- Load unixd before fcgid for EL7\n- Fix RedirectMatch rules\n- Fix misleading error message in apache::version\n\n####Known Bugs\n* By default, the version of Apache that ships with Ubuntu 10.04 does not work with `wsgi_import_script`.\n* SLES is unsupported.\n\n##2014-07-15 - Supported Release 1.1.1\n###Summary\n\nThis release merely updates metadata.json so the module can be uninstalled and\nupgraded via the puppet module command.\n\n## 2014-04-14 Supported Release 1.1.0\n\n###Summary\n\nThis release primarily focuses on extending the httpd 2.4 support, tested\nthrough adding RHEL7 and Ubuntu 14.04 support.  It also includes Passenger \n4 support, as well as several new modules and important bugfixes.\n\n####Features\n\n- Add support for RHEL7 and Ubuntu 14.04\n- More complete apache24 support\n- Passenger 4 support\n- Add support for max_keepalive_requests and log_formats parameters\n- Add mod_pagespeed support\n- Add mod_speling support\n- Added several parameters for mod_passenger\n- Added ssl_cipher parameter to apache::mod::ssl\n- Improved examples in documentation\n- Added docroot_mode, action, and suexec_user_group parameters to apache::vhost\n- Add support for custom extensions for mod_php\n- Improve proxy_html support for Debian\n\n####Bugfixes\n\n- Remove NameVirtualHost directive for apache >= 2.4\n- Order proxy_set option so it doesn't change between runs\n- Fix inverted SSL compression\n- Fix missing ensure on concat::fragment resources\n- Fix bad dependencies in apache::mod and apache::mod::mime\n\n####Known Bugs\n* By default, the version of Apache that ships with Ubuntu 10.04 does not work with `wsgi_import_script`.\n* SLES is unsupported.\n\n## 2014-03-04 Supported Release 1.0.1\n###Summary\n\nThis is a supported release.  This release removes a testing symlink that can\ncause trouble on systems where /var is on a seperate filesystem from the\nmodulepath.\n\n####Features\n####Bugfixes\n####Known Bugs\n* By default, the version of Apache that ships with Ubuntu 10.04 does not work with `wsgi_import_script`.\n* SLES is unsupported.\n \n## 2014-03-04 Supported Release 1.0.0\n###Summary\n\nThis is a supported release. This release introduces Apache 2.4 support for\nDebian and RHEL based osfamilies.\n\n####Features\n\n- Add apache24 support\n- Add rewrite_base functionality to rewrites\n- Updated README documentation\n- Add WSGIApplicationGroup and WSGIImportScript directives\n\n####Bugfixes\n\n- Replace mutating hashes with merge() for Puppet 3.5\n- Fix WSGI import_script and mod_ssl issues on Lucid\n\n####Known Bugs\n* By default, the version of Apache that ships with Ubuntu 10.04 does not work with `wsgi_import_script`.\n* SLES is unsupported.\n\n---\n\n## 2014-01-31 Release 0.11.0\n### Summary:\n\nThis release adds preliminary support for Windows compatibility and multiple rewrite support.\n\n#### Backwards-incompatible Changes:\n\n- The rewrite_rule parameter is deprecated in favor of the new rewrite parameter\n  and will be removed in a future release.\n\n#### Features:\n\n- add Match directive\n- quote paths for windows compatibility\n- add auth_group_file option to README.md\n- allow AuthGroupFile directive for vhosts\n- Support Header directives in vhost context\n- Don't purge mods-available dir when separate enable dir is used\n- Fix the servername used in log file name\n- Added support for mod_include\n- Remove index parameters.\n- Support environment variable control for CustomLog\n- added redirectmatch support\n- Setting up the ability to do multiple rewrites and conditions.\n- Convert spec tests to beaker.\n- Support php_admin_(flag|value)s\n\n#### Bugfixes:\n\n- directories are either a Hash or an Array of Hashes\n- Configure Passenger in separate .conf file on RH so PassengerRoot isn't lost\n- (docs) Update list of `apache::mod::[name]` classes\n- (docs) Fix apache::namevirtualhost example call style\n- Fix $ports_file reference in apache::listen.\n- Fix $ports_file reference in Namevirtualhost.\n\n\n## 2013-12-05 Release 0.10.0\n### Summary:\n\nThis release adds FreeBSD osfamily support and various other improvements to some mods.\n\n#### Features:\n\n- Add suPHP_UserGroup directive to directory context\n- Add support for ScriptAliasMatch directives\n- Set SSLOptions StdEnvVars in server context\n- No implicit <Directory> entry for ScriptAlias path\n- Add support for overriding ErrorDocument\n- Add support for AliasMatch directives\n- Disable default \"allow from all\" in vhost-directories\n- Add WSGIPythonPath as an optional parameter to mod_wsgi. \n- Add mod_rpaf support\n- Add directives: IndexOptions, IndexOrderDefault\n- Add ability to include additional external configurations in vhost\n- need to use the provider variable not the provider key value from the directory hash for matches\n- Support for FreeBSD and few other features\n- Add new params to apache::mod::mime class\n- Allow apache::mod to specify module id and path\n- added $server_root parameter\n- Add Allow and ExtendedStatus support to mod_status\n- Expand vhost/_directories.pp directive support\n- Add initial support for nss module (no directives in vhost template yet)\n- added peruser and event mpms\n- added $service_name parameter\n- add parameter for TraceEnable\n- Make LogLevel configurable for server and vhost\n- Add documentation about $ip\n- Add ability to pass ip (instead of wildcard) in default vhost files\n\n#### Bugfixes:\n\n- Don't listen on port or set NameVirtualHost for non-existent vhost\n- only apply Directory defaults when provider is a directory\n- Working mod_authnz_ldap support on Debian/Ubuntu\n\n## 2013-09-06 Release 0.9.0\n### Summary:\nThis release adds more parameters to the base apache class and apache defined\nresource to make the module more flexible. It also adds or enhances SuPHP,\nWSGI, and Passenger mod support, and support for the ITK mpm module.\n\n#### Backwards-incompatible Changes:\n- Remove many default mods that are not normally needed.\n- Remove `rewrite_base` `apache::vhost` parameter; did not work anyway.\n- Specify dependencies on stdlib >=2.4.0 (this was already the case, but\nmaking explicit)\n- Deprecate `a2mod` in favor of the `apache::mod::*` classes and `apache::mod`\ndefined resource.\n\n#### Features:\n- `apache` class\n  - Add `httpd_dir` parameter to change the location of the configuration\n  files.\n  - Add `logroot` parameter to change the logroot\n  - Add `ports_file` parameter to changes the `ports.conf` file location\n  - Add `keepalive` parameter to enable persistent connections\n  - Add `keepalive_timeout` parameter to change the timeout\n  - Update `default_mods` to be able to take an array of mods to enable.\n- `apache::vhost`\n  - Add `wsgi_daemon_process`, `wsgi_daemon_process_options`,\n  `wsgi_process_group`, and `wsgi_script_aliases` parameters for per-vhost\n  WSGI configuration.\n  - Add `access_log_syslog` parameter to enable syslogging.\n  - Add `error_log_syslog` parameter to enable syslogging of errors.\n  - Add `directories` hash parameter. Please see README for documentation.\n  - Add `sslproxyengine` parameter to enable SSLProxyEngine\n  - Add `suphp_addhandler`, `suphp_engine`, and `suphp_configpath` for\n  configuring SuPHP.\n  - Add `custom_fragment` parameter to allow for arbitrary apache\n  configuration injection. (Feature pull requests are prefered over using\n  this, but it is available in a pinch.)\n- Add `apache::mod::suphp` class for configuring SuPHP.\n- Add `apache::mod::itk` class for configuring ITK mpm module.\n- Update `apache::mod::wsgi` class for global WSGI configuration with\n`wsgi_socket_prefix` and `wsgi_python_home` parameters.\n- Add README.passenger.md to document the `apache::mod::passenger` usage.\nAdded `passenger_high_performance`, `passenger_pool_idle_time`,\n`passenger_max_requests`, `passenger_stat_throttle_rate`, `rack_autodetect`,\nand `rails_autodetect` parameters.\n- Separate the httpd service resource into a new `apache::service` class for\ndependency chaining of `Class['apache'] -> <resource> ~>\nClass['apache::service']`\n- Added `apache::mod::proxy_balancer` class for `apache::balancer`\n\n#### Bugfixes:\n- Change dependency to puppetlabs-concat\n- Fix ruby 1.9 bug for `a2mod`\n- Change servername to be `$::hostname` if there is no `$::fqdn`\n- Make `/etc/ssl/certs` the default ssl certs directory for RedHat non-5.\n- Make `php` the default php package for RedHat non-5.\n- Made `aliases` able to take a single alias hash instead of requiring an\narray.\n\n## 2013-07-26 Release 0.8.1\n#### Bugfixes:\n- Update `apache::mpm_module` detection for worker/prefork\n- Update `apache::mod::cgi` and `apache::mod::cgid` detection for\nworker/prefork\n\n## 2013-07-16 Release 0.8.0\n#### Features:\n- Add `servername` parameter to `apache` class\n- Add `proxy_set` parameter to `apache::balancer` define\n\n#### Bugfixes:\n- Fix ordering for multiple `apache::balancer` clusters\n- Fix symlinking for sites-available on Debian-based OSs\n- Fix dependency ordering for recursive confdir management\n- Fix `apache::mod::*` to notify the service on config change\n- Documentation updates\n\n## 2013-07-09 Release 0.7.0\n#### Changes:\n- Essentially rewrite the module -- too many to list\n- `apache::vhost` has many abilities -- see README.md for details\n- `apache::mod::*` classes provide httpd mod-loading capabilities\n- `apache` base class is much more configurable\n\n#### Bugfixes:\n- Many. And many more to come\n\n## 2013-03-2 Release 0.6.0\n- update travis tests (add more supported versions)\n- add access log_parameter\n- make purging of vhost dir configurable\n\n## 2012-08-24 Release 0.4.0\n#### Changes:\n- `include apache` is now required when using `apache::mod::*`\n\n#### Bugfixes:\n- Fix syntax for validate_re\n- Fix formatting in vhost template\n- Fix spec tests such that they pass\n\n##2012-05-08 Puppet Labs <info@puppetlabs.com> - 0.0.4\n* e62e362 Fix broken tests for ssl, vhost, vhost::*\n* 42c6363 Changes to match style guide and pass puppet-lint without error\n* 42bc8ba changed name => path for file resources in order to name namevar by it's name\n* 72e13de One end too much\n* 0739641 style guide fixes: 'true' <> true, $operatingsystem needs to be $::operatingsystem, etc.\n* 273f94d fix tests\n* a35ede5 (#13860) Make a2enmod/a2dismo commands optional\n* 98d774e (#13860) Autorequire Package['httpd']\n* 05fcec5 (#13073) Add missing puppet spec tests\n* 541afda (#6899) Remove virtual a2mod definition\n* 976cb69 (#13072) Move mod python and wsgi package names to params\n* 323915a (#13060) Add .gitignore to repo\n* fdf40af (#13060) Remove pkg directory from source tree\n* fd90015 Add LICENSE file and update the ModuleFile\n* d3d0d23 Re-enable local php class\n* d7516c7 Make management of firewalls configurable for vhosts\n* 60f83ba Explicitly lookup scope of apache_name in templates.\n* f4d287f (#12581) Add explicit ordering for vdir directory\n* 88a2ac6 (#11706) puppetlabs-apache depends on puppetlabs-firewall\n* a776a8b (#11071) Fix to work with latest firewall module\n* 2b79e8b (#11070) Add support for Scientific Linux\n* 405b3e9 Fix for a2mod\n* 57b9048 Commit apache::vhost::redirect Manifest\n* 8862d01 Commit apache::vhost::proxy Manifest\n* d5c1fd0 Commit apache::mod::wsgi Manifest\n* a825ac7 Commit apache::mod::python Manifest\n* b77062f Commit Templates\n* 9a51b4a Vhost File Declarations\n* 6cf7312 Defaults for Parameters\n* 6a5b11a Ensure installed\n* f672e46 a2mod fix\n* 8a56ee9 add pthon support to apache\n",
      "license": "Copyright (C) 2012 Puppet Labs Inc\n\nPuppet Labs can be contacted at: info@puppetlabs.com\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n",
      "created_at": "2014-11-11 17:41:11 -0800",
      "updated_at": "2015-02-04 16:42:25 -0800",
      "deleted_at": null
    },
    {
      "uri": "/v3/releases/puppetlabs-apache-1.1.1",
      "module": {
        "uri": "/v3/modules/puppetlabs-apache",
        "name": "apache",
        "owner": {
          "uri": "/v3/users/puppetlabs",
          "username": "puppetlabs",
          "gravatar_id": "fdd009b7c1ec96e088b389f773e87aec"
        }
      },
      "version": "1.1.1",
      "metadata": {
        "name": "puppetlabs-apache",
        "version": "1.1.1",
        "author": "puppetlabs",
        "summary": "Puppet module for Apache",
        "license": "Apache 2.0",
        "source": "git://github.com/puppetlabs/puppetlabs-apache.git",
        "project_page": "https://github.com/puppetlabs/puppetlabs-apache",
        "issues_url": "https://github.com/puppetlabs/puppetlabs-apache/issues",
        "operatingsystem_support": [
          {
            "operatingsystem": "RedHat",
            "operatingsystemrelease": [
              "5",
              "6",
              "7"
            ]
          },
          {
            "operatingsystem": "CentOS",
            "operatingsystemrelease": [
              "5",
              "6",
              "7"
            ]
          },
          {
            "operatingsystem": "OracleLinux",
            "operatingsystemrelease": [
              "5",
              "6",
              "7"
            ]
          },
          {
            "operatingsystem": "Scientific",
            "operatingsystemrelease": [
              "5",
              "6",
              "7"
            ]
          },
          {
            "operatingsystem": "Debian",
            "operatingsystemrelease": [
              "6",
              "7"
            ]
          },
          {
            "operatingsystem": "Ubuntu",
            "operatingsystemrelease": [
              "10.04",
              "12.04",
              "14.04"
            ]
          }
        ],
        "requirements": [
          {
            "name": "pe",
            "version_requirement": ">= 3.2.0 < 3.4.0"
          },
          {
            "name": "puppet",
            "version_requirement": "3.x"
          }
        ],
        "description": "Module for Apache configuration",
        "dependencies": [
          {
            "name": "puppetlabs/stdlib",
            "version_requirement": ">= 2.4.0"
          },
          {
            "name": "puppetlabs/concat",
            "version_requirement": ">= 1.0.0"
          }
        ]
      },
      "tags": [
        "virtual-host",
        "apache",
        "web",
        "virtualhost",
        "httpd",
        "centos",
        "rhel",
        "debian",
        "ubuntu",
        "apache2",
        "ssl",
        "passenger",
        "wsgi",
        "proxy"
      ],
      "supported": true,
      "validation_score": 98,
      "file_uri": "/v3/files/puppetlabs-apache-1.1.1.tar.gz",
      "file_size": 109502,
      "file_md5": "de76efd495ada7c5092cee3767a057d2",
      "downloads": 78069,
      "readme": "#apache\n\n[![Build Status](https://travis-ci.org/puppetlabs/puppetlabs-apache.png?branch=master)](https://travis-ci.org/puppetlabs/puppetlabs-apache)\n\n####Table of Contents\n\n1. [Overview - What is the apache module?](#overview)\n2. [Module Description - What does the module do?](#module-description)\n3. [Setup - The basics of getting started with apache](#setup)\n    * [Beginning with apache - Installation](#beginning-with-apache)\n    * [Configure a virtual host - Basic options for getting started](#configure-a-virtual-host)\n4. [Usage - The classes and defined types available for configuration](#usage)\n    * [Classes and Defined Types](#classes-and-defined-types)\n        * [Class: apache](#class-apache)\n        * [Class: apache::default_mods](#class-apachedefault_mods)\n        * [Defined Type: apache::mod](#defined-type-apachemod)\n        * [Classes: apache::mod::*](#classes-apachemodname)\n        * [Class: apache::mod::pagespeed](#class-apachemodpagespeed)\n        * [Class: apache::mod::php](#class-apachemodphp)\n        * [Class: apache::mod::ssl](#class-apachemodssl)\n        * [Class: apache::mod::wsgi](#class-apachemodwsgi)\n        * [Defined Type: apache::vhost](#defined-type-apachevhost)\n        * [Parameter: `directories` for apache::vhost](#parameter-directories-for-apachevhost)\n        * [SSL parameters for apache::vhost](#ssl-parameters-for-apachevhost)\n    * [Virtual Host Examples - Demonstrations of some configuration options](#virtual-host-examples)\n    * [Load Balancing](#load-balancing)\n        * [Defined Type: apache::balancer](#defined-type-apachebalancer)\n        * [Defined Type: apache::balancermember](#defined-type-apachebalancermember)\n        * [Examples - Load balancing with exported and non-exported resources](#examples)\n5. [Reference - An under-the-hood peek at what the module is doing and how](#reference)\n    * [Classes](#classes)\n        * [Public Classes](#public-classes)\n        * [Private Classes](#private-classes)\n    * [Defined Types](#defined-types)\n        * [Public Defined Types](#public-defined-types)\n        * [Private Defined Types](#private-defined-types)\n    * [Templates](#templates)\n6. [Limitations - OS compatibility, etc.](#limitations)\n7. [Development - Guide for contributing to the module](#development)\n    * [Contributing to the apache module](#contributing)\n    * [Running tests - A quick guide](#running-tests)\n\n##Overview\n\nThe apache module allows you to set up virtual hosts and manage web services with minimal effort.\n\n##Module Description\n\nApache is a widely-used web server, and this module provides a simplified way of creating configurations to manage your infrastructure. This includes the ability to configure and manage a range of different virtual host setups, as well as a streamlined way to install and configure Apache modules.\n\n##Setup\n\n**What apache affects:**\n\n* configuration files and directories (created and written to)\n    * **WARNING**: Configurations that are *not* managed by Puppet will be purged.\n* package/service/configuration files for Apache\n* Apache modules\n* virtual hosts\n* listened-to ports\n* `/etc/make.conf` on FreeBSD \n\n###Beginning with Apache\n\nTo install Apache with the default parameters\n\n```puppet\n    class { 'apache':  }\n```\n\nThe defaults are determined by your operating system (e.g. Debian systems have one set of defaults, and RedHat systems have another, as do FreeBSD systems). These defaults will work well in a testing environment, but are not suggested for production. To establish customized parameters\n\n```puppet\n    class { 'apache':\n      default_mods        => false,\n      default_confd_files => false,\n    }\n```\n\n###Configure a virtual host\n\nDeclaring the `apache` class will create a default virtual host by setting up a vhost on port 80, listening on all interfaces and serving `$apache::docroot`.\n\n```puppet\n    class { 'apache': }\n```\n\nTo configure a very basic, name-based virtual host\n\n```puppet\n    apache::vhost { 'first.example.com':\n      port    => '80',\n      docroot => '/var/www/first',\n    }\n```\n\n*Note:* The default priority is 15. If nothing matches this priority, the alphabetically first name-based vhost will be used. This is also true if you pass a higher priority and no names match anything else.\n\nA slightly more complicated example, changes the docroot owner/group from the default 'root'\n\n```puppet\n    apache::vhost { 'second.example.com':\n      port          => '80',\n      docroot       => '/var/www/second',\n      docroot_owner => 'third',\n      docroot_group => 'third',\n    }\n```\n\nTo set up a virtual host with SSL and default SSL certificates\n\n```puppet\n    apache::vhost { 'ssl.example.com':\n      port    => '443',\n      docroot => '/var/www/ssl',\n      ssl     => true,\n    }\n```\n\nTo set up a virtual host with SSL and specific SSL certificates\n\n```puppet\n    apache::vhost { 'fourth.example.com':\n      port     => '443',\n      docroot  => '/var/www/fourth',\n      ssl      => true,\n      ssl_cert => '/etc/ssl/fourth.example.com.cert',\n      ssl_key  => '/etc/ssl/fourth.example.com.key',\n    }\n```\n\nVirtual hosts listen on '*' by default. To listen on a specific IP address\n\n```puppet\n    apache::vhost { 'subdomain.example.com':\n      ip      => '127.0.0.1',\n      port    => '80',\n      docroot => '/var/www/subdomain',\n    }\n```\n\nTo set up a virtual host with a wildcard alias for the subdomain mapped to a same-named directory, for example: `http://example.com.loc` to `/var/www/example.com`\n\n```puppet\n    apache::vhost { 'subdomain.loc':\n      vhost_name       => '*',\n      port             => '80',\n      virtual_docroot' => '/var/www/%-2+',\n      docroot          => '/var/www',\n      serveraliases    => ['*.loc',],\n    }\n```\n\nTo set up a virtual host with suPHP\n\n```puppet\n    apache::vhost { 'suphp.example.com':\n      port                => '80',\n      docroot             => '/home/appuser/myphpapp',\n      suphp_addhandler    => 'x-httpd-php',\n      suphp_engine        => 'on',\n      suphp_configpath    => '/etc/php5/apache2',\n      directories         => { path => '/home/appuser/myphpapp',\n        'suphp'           => { user => 'myappuser', group => 'myappgroup' },\n      }\n    }\n```\n\nTo set up a virtual host with WSGI\n\n```puppet\n    apache::vhost { 'wsgi.example.com':\n      port                        => '80',\n      docroot                     => '/var/www/pythonapp',\n      wsgi_application_group      => '%{GLOBAL}',\n      wsgi_daemon_process         => 'wsgi',\n      wsgi_daemon_process_options => { \n        processes    => '2', \n        threads      => '15', \n        display-name => '%{GROUP}',\n       },\n      wsgi_import_script          => '/var/www/demo.wsgi',\n      wsgi_import_script_options  =>\n        { process-group => 'wsgi', application-group => '%{GLOBAL}' },\n      wsgi_process_group          => 'wsgi',\n      wsgi_script_aliases         => { '/' => '/var/www/demo.wsgi' },\n    }\n```\n\nStarting in Apache 2.2.16, HTTPD supports [FallbackResource](https://httpd.apache.org/docs/current/mod/mod_dir.html#fallbackresource), a simple replacement for common RewriteRules.\n\n```puppet\n    apache::vhost { 'wordpress.example.com':\n      port                => '80',\n      docroot             => '/var/www/wordpress',\n      fallbackresource    => '/index.php',\n    }\n```\n\nPlease note that the 'disabled' argument to FallbackResource is only supported since Apache 2.2.24.\n\nSee a list of all [virtual host parameters](#defined-type-apachevhost). See an extensive list of [virtual host examples](#virtual-host-examples).\n\n##Usage\n\n###Classes and Defined Types\n\nThis module modifies Apache configuration files and directories, and will purge any configuration not managed by Puppet. Configuration of Apache should be managed by Puppet, as non-Puppet configuration files can cause unexpected failures.\n\nIt is possible to temporarily disable full Puppet management by setting the [`purge_configs`](#purge_configs) parameter within the base `apache` class to 'false'. This option should only be used as a temporary means of saving and relocating customized configurations. See the [`purge_configs` parameter](#purge_configs) for more information.\n\n####Class: `apache`\n\nThe apache module's primary class, `apache`, guides the basic setup of Apache on your system.\n\nYou may establish a default vhost in this class, the `vhost` class, or both. You may add additional vhost configurations for specific virtual hosts using a declaration of the `vhost` type.\n\n**Parameters within `apache`:**\n\n#####`apache_version`\n\nConfigures the behavior of the module templates, package names, and default mods by setting the Apache version. Default is determined by the class `apache::version` using the OS family and release. It should not be configured manually without special reason.\n\n#####`confd_dir`\n\nChanges the location of the configuration directory your custom configuration files are placed in. Defaults to '/etc/httpd/conf' on RedHat, '/etc/apache2' on Debian, and '/usr/local/etc/apache22' on FreeBSD.\n\n#####`conf_template`\n\nOverrides the template used for the main apache configuration file. Defaults to 'apache/httpd.conf.erb'.\n\n*Note:* Using this parameter is potentially risky, as the module has been built for a minimal configuration file with the configuration primarily coming from conf.d/ entries.\n\n#####`default_confd_files`\n\nGenerates default set of include-able Apache configuration files under  `${apache::confd_dir}` directory. These configuration files correspond to what is usually installed with the Apache package on a given platform.\n\n#####`default_mods`\n\nSets up Apache with default settings based on your OS. Valid values are 'true', 'false', or an array of mod names. \n\nDefaults to 'true', which will include the default [HTTPD mods](https://github.com/puppetlabs/puppetlabs-apache/blob/master/manifests/default_mods.pp).\n\nIf false, it will only include the mods required to make HTTPD work, and any other mods can be declared on their own.\n\nIf an array, the apache module will include the array of mods listed.\n\n#####`default_ssl_ca`\n\nThe default certificate authority, which is automatically set to 'undef'. This default will work out of the box but must be updated with your specific certificate information before being used in production.\n\n#####`default_ssl_cert`\n\nThe default SSL certification, which is automatically set based on your operating system  ('/etc/pki/tls/certs/localhost.crt' for RedHat, '/etc/ssl/certs/ssl-cert-snakeoil.pem' for Debian, and '/usr/local/etc/apache22/server.crt' for FreeBSD). This default will work out of the box but must be updated with your specific certificate information before being used in production.\n\n#####`default_ssl_chain`\n\nThe default SSL chain, which is automatically set to 'undef'. This default will work out of the box but must be updated with your specific certificate information before being used in production.\n\n#####`default_ssl_crl`\n\nThe default certificate revocation list to use, which is automatically set to 'undef'. This default will work out of the box but must be updated with your specific certificate information before being used in production.\n\n#####`default_ssl_crl_path`\n\nThe default certificate revocation list path, which is automatically set to 'undef'. This default will work out of the box but must be updated with your specific certificate information before being used in production.\n\n#####`default_ssl_key`\n\nThe default SSL key, which is automatically set based on your operating system ('/etc/pki/tls/private/localhost.key' for RedHat, '/etc/ssl/private/ssl-cert-snakeoil.key' for Debian, and '/usr/local/etc/apache22/server.key' for FreeBSD). This default will work out of the box but must be updated with your specific certificate information before being used in production.\n\n#####`default_ssl_vhost`\n\nSets up a default SSL virtual host. Defaults to 'false'. If set to 'true', will set up the following vhost:\n\n```puppet\n    apache::vhost { 'default-ssl':\n      port            => 443,\n      ssl             => true,\n      docroot         => $docroot,\n      scriptalias     => $scriptalias,\n      serveradmin     => $serveradmin,\n      access_log_file => \"ssl_${access_log_file}\",\n      }\n```\n\nSSL vhosts only respond to HTTPS queries.\n\n#####`default_vhost`\n\nSets up a default virtual host. Defaults to 'true', set to 'false' to set up [customized virtual hosts](#configure-a-virtual-host).\n\n#####`error_documents`\n\nEnables custom error documents. Defaults to 'false'.\n\n#####`httpd_dir`\n\nChanges the base location of the configuration directories used for the apache service. This is useful for specially repackaged HTTPD builds, but may have unintended consequences when used in combination with the default distribution packages. Defaults to '/etc/httpd' on RedHat, '/etc/apache2' on Debian, and '/usr/local/etc/apache22' on FreeBSD.\n\n#####`keepalive`\n\nEnables persistent connections.\n\n#####`keepalive_timeout`\n\nSets the amount of time the server will wait for subsequent requests on a persistent connection. Defaults to '15'.\n\n#####`max_keepalive_requests`\n\nSets the limit of the number of requests allowed per connection when KeepAlive is on. Defaults to '100'.\n\n#####`log_level`\n\nChanges the verbosity level of the error log. Defaults to 'warn'. Valid values are 'emerg', 'alert', 'crit', 'error', 'warn', 'notice', 'info', or 'debug'.\n\n#####`log_formats`\n\nDefine additional [LogFormats](https://httpd.apache.org/docs/current/mod/mod_log_config.html#logformat). This is done in a Hash:\n\n```puppet\n  $log_formats = { vhost_common => '%v %h %l %u %t \\\"%r\\\" %>s %b' }\n```\n\n#####`logroot`\n\nChanges the directory where Apache log files for the virtual host are placed. Defaults to '/var/log/httpd' on RedHat, '/var/log/apache2' on Debian, and '/var/log/apache22' on FreeBSD.\n\n#####`manage_group`\n\nSetting this to 'false' will stop the group resource from being created. This is for when you have a group, created from another Puppet module, you want to use to run Apache. Without this parameter, attempting to use a previously established group would result in a duplicate resource error.\n\n#####`manage_user`\n\nSetting this to 'false' will stop the user resource from being created. This is for instances when you have a user, created from another Puppet module, you want to use to run Apache. Without this parameter, attempting to use a previously established user would result in a duplicate resource error.\n\n#####`mod_dir`\n\nChanges the location of the configuration directory your Apache modules configuration files are placed in. Defaults to '/etc/httpd/conf.d' for RedHat, '/etc/apache2/mods-available' for Debian, and '/usr/local/etc/apache22/Modules' for FreeBSD.\n\n#####`mpm_module`\n\nDetermines which MPM is loaded and configured for the HTTPD process. Valid values are 'event', 'itk', 'peruser', 'prefork', 'worker', or 'false'. Defaults to 'prefork' on RedHat and FreeBSD, and 'worker' on Debian. Must be set to 'false' to explicitly declare the following classes with custom parameters:\n\n* `apache::mod::event`\n* `apache::mod::itk`\n* `apache::mod::peruser`\n* `apache::mod::prefork`\n* `apache::mod::worker` \n\n*Note:* Switching between different MPMs on FreeBSD is possible but quite difficult. Before changing `$mpm_module` you must uninstall all packages that depend on your currently-installed Apache. \n\n#####`package_ensure`\n\nAllows control over the package ensure attribute. Can be 'present','absent', or a version string.\n\n#####`ports_file`\n\nChanges the name of the file containing Apache ports configuration. Default is `${conf_dir}/ports.conf`.\n\n#####`purge_configs`\n\nRemoves all other Apache configs and vhosts, defaults to 'true'. Setting this to 'false' is a stopgap measure to allow the apache module to coexist with existing or otherwise-managed configuration. It is recommended that you move your configuration entirely to resources within this module.\n\n#####`sendfile`\n\nMakes Apache use the Linux kernel sendfile to serve static files. Defaults to 'On'.\n\n#####`serveradmin`\n\nSets the server administrator. Defaults to 'root@localhost'.\n\n#####`servername`\n\nSets the server name. Defaults to `fqdn` provided by Facter.\n\n#####`server_root`\n\nSets the root directory in which the server resides. Defaults to '/etc/httpd' on RedHat, '/etc/apache2' on Debian, and '/usr/local' on FreeBSD.\n\n#####`server_signature`\n\nConfigures a trailing footer line under server-generated documents. More information about [ServerSignature](http://httpd.apache.org/docs/current/mod/core.html#serversignature). Defaults to 'On'.\n\n#####`server_tokens`\n\nControls how much information Apache sends to the browser about itself and the operating system. More information about [ServerTokens](http://httpd.apache.org/docs/current/mod/core.html#servertokens). Defaults to 'OS'.\n\n#####`service_enable`\n\nDetermines whether the HTTPD service is enabled when the machine is booted. Defaults to 'true'.\n\n#####`service_ensure`\n\nDetermines whether the service should be running. Can be set to 'undef', which is useful when you want to let the service be managed by some other application like Pacemaker. Defaults to 'running'.\n\n#####`service_name`\n\nName of the Apache service to run. Defaults to: 'httpd' on RedHat, 'apache2' on Debian, and 'apache22' on FreeBSD.\n\n#####`trace_enable`\n\nControls how TRACE requests per RFC 2616 are handled. More information about [TraceEnable](http://httpd.apache.org/docs/current/mod/core.html#traceenable). Defaults to 'On'.\n\n#####`vhost_dir`\n\nChanges the location of the configuration directory your virtual host configuration files are placed in. Defaults to 'etc/httpd/conf.d' on RedHat, '/etc/apache2/sites-available' on Debian, and '/usr/local/etc/apache22/Vhosts' on FreeBSD.\n\n####Class: `apache::default_mods`\n\nInstalls default Apache modules based on what OS you are running.\n\n```puppet\n    class { 'apache::default_mods': }\n```\n\n####Defined Type: `apache::mod`\n\nUsed to enable arbitrary Apache HTTPD modules for which there is no specific `apache::mod::[name]` class. The `apache::mod` defined type will also install the required packages to enable the module, if any.\n\n```puppet\n    apache::mod { 'rewrite': }\n    apache::mod { 'ldap': }\n```\n\n####Classes: `apache::mod::[name]`\n\nThere are many `apache::mod::[name]` classes within this module that can be declared using `include`:\n\n* `actions`\n* `alias`\n* `auth_basic`\n* `auth_kerb`\n* `authnz_ldap`*\n* `autoindex`\n* `cache`\n* `cgi`\n* `cgid`\n* `dav`\n* `dav_fs`\n* `dav_svn`\n* `deflate`\n* `dev`\n* `dir`*\n* `disk_cache`\n* `event`\n* `expires`\n* `fastcgi`\n* `fcgid`\n* `headers`\n* `include`\n* `info`\n* `itk`\n* `ldap`\n* `mime`\n* `mime_magic`*\n* `negotiation`\n* `nss`*\n* `pagespeed` (see [`apache::mod::pagespeed`](#class-apachemodpagespeed) below)\n* `passenger`*\n* `perl`\n* `peruser`\n* `php` (requires [`mpm_module`](#mpm_module) set to `prefork`)\n* `prefork`*\n* `proxy`*\n* `proxy_ajp`\n* `proxy_balancer`\n* `proxy_html`\n* `proxy_http`\n* `python`\n* `reqtimeout`\n* `rewrite`\n* `rpaf`*\n* `setenvif`\n* `speling`\n* `ssl`* (see [`apache::mod::ssl`](#class-apachemodssl) below)\n* `status`*\n* `suphp`\n* `userdir`*\n* `vhost_alias`\n* `worker`*\n* `wsgi` (see [`apache::mod::wsgi`](#class-apachemodwsgi) below)\n* `xsendfile`\n\nModules noted with a * indicate that the module has settings and, thus, a template that includes parameters. These parameters control the module's configuration. Most of the time, these parameters will not require any configuration or attention.\n\nThe modules mentioned above, and other Apache modules that have templates, will cause template files to be dropped along with the mod install and the module will not work without the template. Any module without a template will install the package but drop no files.\n\n####Class: `apache::mod::pagespeed`\n\nInstalls and manages mod_pagespeed, which is a Google module that rewrites web pages to reduce latency and bandwidth.\n\nThis module does *not* manage the software repositories needed to automatically install the\nmod-pagespeed-stable package. The module does however require that the package be installed,\nor be installable using the system's default package provider.  You should ensure that this\npre-requisite is met or declaring `apache::mod::pagespeed` will cause the puppet run to fail.\n\nThese are the defaults:\n\n```puppet\n    class { 'apache::mod::pagespeed':\n      inherit_vhost_config          => 'on',\n      filter_xhtml                  => false,\n      cache_path                    => '/var/cache/mod_pagespeed/',\n      log_dir                       => '/var/log/pagespeed',\n      memache_servers               => [],\n      rewrite_level                 => 'CoreFilters',\n      disable_filters               => [],\n      enable_filters                => [],\n      forbid_filters                => [],\n      rewrite_deadline_per_flush_ms => 10,\n      additional_domains            => undef,\n      file_cache_size_kb            => 102400,\n      file_cache_clean_interval_ms  => 3600000,\n      lru_cache_per_process         => 1024,\n      lru_cache_byte_limit          => 16384,\n      css_flatten_max_bytes         => 2048,\n      css_inline_max_bytes          => 2048,\n      css_image_inline_max_bytes    => 2048,\n      image_inline_max_bytes        => 2048,\n      js_inline_max_bytes           => 2048,\n      css_outline_min_bytes         => 3000,\n      js_outline_min_bytes          => 3000,\n      inode_limit                   => 500000,\n      image_max_rewrites_at_once    => 8,\n      num_rewrite_threads           => 4,\n      num_expensive_rewrite_threads => 4,\n      collect_statistics            => 'on',\n      statistics_logging            => 'on',\n      allow_view_stats              => [],\n      allow_pagespeed_console       => [],\n      allow_pagespeed_message       => [],\n      message_buffer_size           => 100000,\n      additional_configuration      => { }\n    }\n```\n\nFull documentation for mod_pagespeed is available from [Google](http://modpagespeed.com).\n\n####Class: `apache::mod::php`\n\nInstalls and configures mod_php. The defaults are OS-dependant.\n\nOverriding the package name:\n```\n  class {'::apache::mod::php':\n    package_name => \"php54-php\",\n    path         => \"${::apache::params::lib_path}/libphp54-php5.so\",\n  }\n```\n\n####Class: `apache::mod::ssl`\n\nInstalls Apache SSL capabilities and uses the ssl.conf.erb template. These are the defaults:\n\n```puppet\n    class { 'apache::mod::ssl':\n      ssl_compression => false,\n      ssl_options     => [ 'StdEnvVars' ],\n  }\n```\n\nTo *use* SSL with a virtual host, you must either set the`default_ssl_vhost` parameter in `::apache` to 'true' or set the `ssl` parameter in `apache::vhost` to 'true'.\n\n####Class: `apache::mod::wsgi`\n\nEnables Python support in the WSGI module. To use, simply `include 'apache::mod::wsgi'`. \n\nFor customized parameters, which tell Apache how Python is currently configured on the operating system,\n\n```puppet\n    class { 'apache::mod::wsgi':\n      wsgi_socket_prefix => \"\\${APACHE_RUN_DIR}WSGI\",\n      wsgi_python_home   => '/path/to/venv',\n      wsgi_python_path   => '/path/to/venv/site-packages',\n    }\n```\n\nMore information about [WSGI](http://modwsgi.readthedocs.org/en/latest/).\n\n####Defined Type: `apache::vhost`\n\nThe Apache module allows a lot of flexibility in the setup and configuration of virtual hosts. This flexibility is due, in part, to `vhost`'s being a defined resource type, which allows it to be evaluated multiple times with different parameters.\n\nThe `vhost` defined type allows you to have specialized configurations for virtual hosts that have requirements outside the defaults. You can set up a default vhost within the base `::apache` class, as well as set a customized vhost as default. Your customized vhost (priority 10) will be privileged over the base class vhost (15).\n\nIf you have a series of specific configurations and do not want a base `::apache` class default vhost, make sure to set the base class `default_vhost` to 'false'.\n\n```puppet\n    class { 'apache':\n      default_vhost => false,\n    }\n```\n\n**Parameters within `apache::vhost`:**\n\n#####`access_log`\n\nSpecifies whether `*_access.log` directives (`*_file`,`*_pipe`, or `*_syslog`) should be configured. Setting the value to 'false' will choose none. Defaults to 'true'. \n\n#####`access_log_file`\n\nSets the `*_access.log` filename that is placed in `$logroot`. Given a vhost, example.com, it defaults to 'example.com_ssl.log' for SSL vhosts and 'example.com_access.log' for non-SSL vhosts.\n\n#####`access_log_pipe`\n\nSpecifies a pipe to send access log messages to. Defaults to 'undef'.\n\n#####`access_log_syslog`\n\nSends all access log messages to syslog. Defaults to 'undef'.\n\n#####`access_log_format`\n\nSpecifies the use of either a LogFormat nickname or a custom format string for the access log. Defaults to 'combined'. See [these examples](http://httpd.apache.org/docs/current/mod/mod_log_config.html).\n\n#####`access_log_env_var`\n\nSpecifies that only requests with particular environment variables be logged. Defaults to 'undef'.\n\n#####`add_listen`\n\nDetermines whether the vhost creates a Listen statement. The default value is 'true'.\n\nSetting `add_listen` to 'false' stops the vhost from creating a Listen statement, and this is important when you combine vhosts that are not passed an `ip` parameter with vhosts that *are* passed the `ip` parameter.\n\n#####`additional_includes`\n\nSpecifies paths to additional static, vhost-specific Apache configuration files. Useful for implementing a unique, custom configuration not supported by this module. Can be an array. Defaults to '[]'.\n\n#####`aliases`\n\nPasses a list of hashes to the vhost to create Alias or AliasMatch directives as per the [mod_alias documentation](http://httpd.apache.org/docs/current/mod/mod_alias.html). These hashes are formatted as follows:\n\n```puppet\naliases => [\n  { aliasmatch => '^/image/(.*)\\.jpg$', \n    path       => '/files/jpg.images/$1.jpg',\n  }\n  { alias      => '/image',\n    path       => '/ftp/pub/image', \n  },\n],\n```\n\nFor `alias` and `aliasmatch` to work, each will need a corresponding context, such as '< Directory /path/to/directory>' or '<Location /path/to/directory>'. The Alias and AliasMatch directives are created in the order specified in the `aliases` parameter. As described in the [`mod_alias` documentation](http://httpd.apache.org/docs/current/mod/mod_alias.html), more specific `alias` or `aliasmatch` parameters should come before the more general ones to avoid shadowing.\n\n*Note:* If `apache::mod::passenger` is loaded and `PassengerHighPerformance => true` is set, then Alias may have issues honoring the `PassengerEnabled => off` statement. See [this article](http://www.conandalton.net/2010/06/passengerenabled-off-not-working.html) for details.\n\n#####`block`\n\nSpecifies the list of things Apache will block access to. The default is an empty set, '[]'. Currently, the only option is 'scm', which blocks web access to .svn, .git and .bzr directories.\n\n#####`custom_fragment`\n\nPasses a string of custom configuration directives to be placed at the end of the vhost configuration. Defaults to 'undef'.\n\n#####`default_vhost`\n\nSets a given `apache::vhost` as the default to serve requests that do not match any other `apache::vhost` definitions. The default value is 'false'.\n\n#####`directories`\n\nSee the [`directories` section](#parameter-directories-for-apachevhost).\n\n#####`directoryindex`\n\nSets the list of resources to look for when a client requests an index of the directory by specifying a '/' at the end of the directory name. [DirectoryIndex](http://httpd.apache.org/docs/current/mod/mod_dir.html#directoryindex) has more information. Defaults to 'undef'.\n\n#####`docroot`\n\nProvides the [DocumentRoot](http://httpd.apache.org/docs/current/mod/core.html#documentroot) directive, which identifies the directory Apache serves files from. Required. \n\n#####`docroot_group`\n\nSets group access to the docroot directory. Defaults to 'root'.\n\n#####`docroot_owner`\n\nSets individual user access to the docroot directory. Defaults to 'root'.\n\n#####`docroot_mode`\n\nSets access permissions of the docroot directory. Defaults to 'undef'.\n\n#####`error_log`\n\nSpecifies whether `*_error.log` directives should be configured. Defaults to 'true'.\n\n#####`error_log_file`\n\nPoints to the `*_error.log` file. Given a vhost, example.com, it defaults to 'example.com_ssl_error.log' for SSL vhosts and 'example.com_access_error.log' for non-SSL vhosts.\n\n#####`error_log_pipe`\n\nSpecifies a pipe to send error log messages to. Defaults to 'undef'.\n\n#####`error_log_syslog`\n\nSends all error log messages to syslog. Defaults to 'undef'.\n\n#####`error_documents`\n\nA list of hashes which can be used to override the [ErrorDocument](https://httpd.apache.org/docs/current/mod/core.html#errordocument) settings for this vhost. Defaults to '[]'. Example:\n\n```puppet\n    apache::vhost { 'sample.example.net':\n      error_documents => [\n        { 'error_code' => '503', 'document' => '/service-unavail' },\n        { 'error_code' => '407', 'document' => 'https://example.com/proxy/login' },\n      ],\n    }\n```\n\n#####`ensure`\n\nSpecifies if the vhost file is present or absent. Defaults to 'present'.\n\n#####`fallbackresource`\n\nSets the [FallbackResource](http://httpd.apache.org/docs/current/mod/mod_dir.html#fallbackresource) directive, which specifies an action to take for any URL that doesn't map to anything in your filesystem and would otherwise return 'HTTP 404 (Not Found)'. Valid values must either begin with a / or be 'disabled'. Defaults to 'undef'.\n\n#####`headers`\n\nAdds lines to replace, merge, or remove response headers. See [Header](http://httpd.apache.org/docs/current/mod/mod_headers.html#header) for more information. Can be an array. Defaults to 'undef'.\n\n#####`ip`\n\nSets the IP address the vhost listens on. Defaults to listen on all IPs.\n\n#####`ip_based`\n\nEnables an [IP-based](httpd.apache.org/docs/current/vhosts/ip-based.html) vhost. This parameter inhibits the creation of a NameVirtualHost directive, since those are used to funnel requests to name-based vhosts. Defaults to 'false'.\n\n#####`itk`\n\nConfigures [ITK](http://mpm-itk.sesse.net/) in a hash. Keys may be:\n\n* user + group\n* `assignuseridexpr`\n* `assigngroupidexpr`\n* `maxclientvhost`\n* `nice`\n* `limituidrange` (Linux 3.5.0 or newer)\n* `limitgidrange` (Linux 3.5.0 or newer)\n\nUsage will typically look like:\n\n```puppet\n    apache::vhost { 'sample.example.net':\n      docroot => '/path/to/directory',\n      itk     => {\n        user  => 'someuser',\n        group => 'somegroup',\n      },\n    }\n```\n\n#####`logroot`\n\nSpecifies the location of the virtual host's logfiles. Defaults to '/var/log/<apache log location>/'.\n\n#####`log_level`\n\nSpecifies the verbosity of the error log. Defaults to 'warn' for the global server configuration and can be overridden on a per-vhost basis. Valid values are 'emerg', 'alert', 'crit', 'error', 'warn', 'notice', 'info' or 'debug'.\n\n#####`no_proxy_uris`\n\nSpecifies URLs you do not want to proxy. This parameter is meant to be used in combination with [`proxy_dest`](#proxy_dest).\n\n#####`options`\n\nSets the [Options](http://httpd.apache.org/docs/current/mod/core.html#options) for the specified virtual host. Defaults to '['Indexes','FollowSymLinks','MultiViews']', as demonstrated below:\n\n```puppet\n    apache::vhost { 'site.name.fdqn':\n      …\n      options => ['Indexes','FollowSymLinks','MultiViews'],\n    }\n```\n\n*Note:* If you use [`directories`](#parameter-directories-for-apachevhost), 'Options', 'Override', and 'DirectoryIndex' are ignored because they are parameters within `directories`.\n\n#####`override`\n\nSets the overrides for the specified virtual host. Accepts an array of [AllowOverride](http://httpd.apache.org/docs/current/mod/core.html#allowoverride) arguments. Defaults to '[none]'.\n\n#####`php_admin_flags & values`\n\nAllows per-vhost setting [`php_admin_value`s or `php_admin_flag`s](http://php.net/manual/en/configuration.changes.php). These flags or values cannot be overwritten by a user or an application. Defaults to '[]'.\n\n#####`port`\n\nSets the port the host is configured on. The module's defaults ensure the host listens on port 80 for non-SSL vhosts and port 443 for SSL vhosts. The host will only listen on the port set in this parameter. \n\n#####`priority`\n\nSets the relative load-order for Apache HTTPD VirtualHost configuration files. Defaults to '25'.\n\nIf nothing matches the priority, the first name-based vhost will be used. Likewise, passing a higher priority will cause the alphabetically first name-based vhost to be used if no other names match.\n\n*Note:* You should not need to use this parameter. However, if you do use it, be aware that the `default_vhost` parameter for `apache::vhost` passes a priority of '15'.\n\n#####`proxy_dest`\n\nSpecifies the destination address of a [ProxyPass](http://httpd.apache.org/docs/current/mod/mod_proxy.html#proxypass) configuration. Defaults to 'undef'.\n\n#####`proxy_pass`\n\nSpecifies an array of `path => URI` for a [ProxyPass](http://httpd.apache.org/docs/current/mod/mod_proxy.html#proxypass) configuration. Defaults to 'undef'.\n\n```puppet\napache::vhost { 'site.name.fdqn':\n  … \n  proxy_pass => [\n    { 'path' => '/a', 'url' => 'http://backend-a/' },\n    { 'path' => '/b', 'url' => 'http://backend-b/' },\n    { 'path' => '/c', 'url' => 'http://backend-a/c' },\n  ],\n}\n```\n\n#####`rack_base_uris`\n\nSpecifies the resource identifiers for a rack configuration. The file paths specified will be listed as rack application roots for [Phusion Passenger](http://www.modrails.com/documentation/Users%20guide%20Apache.html#_railsbaseuri_and_rackbaseuri) in the _rack.erb template. Defaults to 'undef'.\n\n#####`redirect_dest`\n\nSpecifies the address to redirect to. Defaults to 'undef'.\n\n#####`redirect_source`\n\nSpecifies the source URIs that will redirect to the destination specified in `redirect_dest`. If more than one item for redirect is supplied, the source and destination must be the same length and the items will be order-dependent. \n\n```puppet\n    apache::vhost { 'site.name.fdqn':\n      …\n      redirect_source => ['/images','/downloads'],\n      redirect_dest   => ['http://img.example.com/','http://downloads.example.com/'],\n    }\n```\n\n#####`redirect_status`\n\nSpecifies the status to append to the redirect. Defaults to 'undef'.\n\n```puppet\n    apache::vhost { 'site.name.fdqn':\n      …\n      redirect_status => ['temp','permanent'],\n    }\n```\n\n#####`redirectmatch_regexp` & `redirectmatch_status`\n\nDetermines which server status should be raised for a given regular expression. Entered as an array. Defaults to 'undef'.\n\n```puppet\n    apache::vhost { 'site.name.fdqn':\n      …\n      redirectmatch_status => ['404','404'],\n      redirectmatch_regexp => ['\\.git(/.*|$)/','\\.svn(/.*|$)'],\n    }\n```\n\n#####`request_headers`\n\nModifies collected [request headers](http://httpd.apache.org/docs/current/mod/mod_headers.html#requestheader) in various ways, including adding additional request headers, removing request headers, etc. Defaults to 'undef'.\n\n```puppet\n    apache::vhost { 'site.name.fdqn':\n      …\n      request_headers => [\n        'append MirrorID \"mirror 12\"',\n        'unset MirrorID',\n      ],\n    }\n```\n\n#####`rewrites`\n\nCreates URL rewrite rules. Expects an array of hashes, and the hash keys can be any of 'comment', 'rewrite_base', 'rewrite_cond', or 'rewrite_rule'. Defaults to 'undef'. \n\nFor example, you can specify that anyone trying to access index.html will be served welcome.html\n\n```puppet\n    apache::vhost { 'site.name.fdqn':\n      …\n      rewrites => [ { rewrite_rule => ['^index\\.html$ welcome.html'] } ]\n    }\n```\n\nThe parameter allows rewrite conditions that, when true, will execute the associated rule. For instance, if you wanted to rewrite URLs only if the visitor is using IE\n\n```puppet\n    apache::vhost { 'site.name.fdqn':\n      …\n      rewrites => [\n        {\n          comment      => 'redirect IE',\n          rewrite_cond => ['%{HTTP_USER_AGENT} ^MSIE'],\n          rewrite_rule => ['^index\\.html$ welcome.html'],\n        },\n      ],\n    }\n```\n\nYou can also apply multiple conditions. For instance, rewrite index.html to welcome.html only when the browser is Lynx or Mozilla (version 1 or 2)\n\n```puppet\n    apache::vhost { 'site.name.fdqn':\n      …\n      rewrites => [\n        {\n          comment      => 'Lynx or Mozilla v1/2',\n          rewrite_cond => ['%{HTTP_USER_AGENT} ^Lynx/ [OR]', '%{HTTP_USER_AGENT} ^Mozilla/[12]'],\n          rewrite_rule => ['^index\\.html$ welcome.html'],\n        },\n      ],\n    }\n```\n\nMultiple rewrites and conditions are also possible\n\n```puppet\n    apache::vhost { 'site.name.fdqn':\n      …\n      rewrites => [\n        {\n          comment      => 'Lynx or Mozilla v1/2',\n          rewrite_cond => ['%{HTTP_USER_AGENT} ^Lynx/ [OR]', '%{HTTP_USER_AGENT} ^Mozilla/[12]'],\n          rewrite_rule => ['^index\\.html$ welcome.html'],\n        },\n        {\n          comment      => 'Internet Explorer',\n          rewrite_cond => ['%{HTTP_USER_AGENT} ^MSIE'],\n          rewrite_rule => ['^index\\.html$ /index.IE.html [L]'],\n        },\n        {\n          rewrite_base => /apps/,\n          rewrite_rule => ['^index\\.cgi$ index.php', '^index\\.html$ index.php', '^index\\.asp$ index.html'],\n        },\n     ], \n    }\n```\n\nRefer to the [`mod_rewrite` documentation](http://httpd.apache.org/docs/current/mod/mod_rewrite.html) for more details on what is possible with rewrite rules and conditions.\n\n#####`scriptalias`\n\nDefines a directory of CGI scripts to be aliased to the path '/cgi-bin', for example: '/usr/scripts'. Defaults to 'undef'.\n\n#####`scriptaliases`\n\nPasses an array of hashes to the vhost to create either ScriptAlias or ScriptAliasMatch statements as per the [`mod_alias` documentation](http://httpd.apache.org/docs/current/mod/mod_alias.html). These hashes are formatted as follows:\n\n```puppet\n    scriptaliases => [\n      {\n        alias => '/myscript',\n        path  => '/usr/share/myscript',\n      },\n      {\n        aliasmatch => '^/foo(.*)',\n        path       => '/usr/share/fooscripts$1',\n      },\n      {\n        aliasmatch => '^/bar/(.*)',\n        path       => '/usr/share/bar/wrapper.sh/$1',\n      },\n      {\n        alias => '/neatscript',\n        path  => '/usr/share/neatscript',\n      },\n    ]\n```\n\nThe ScriptAlias and ScriptAliasMatch directives are created in the order specified. As with [Alias and AliasMatch](#aliases) directives, more specific aliases should come before more general ones to avoid shadowing.\n\n#####`serveradmin`\n\nSpecifies the email address Apache will display when it renders one of its error pages. Defaults to 'undef'.\n\n#####`serveraliases`\n\nSets the [ServerAliases](http://httpd.apache.org/docs/current/mod/core.html#serveralias) of the site. Defaults to '[]'.\n\n#####`servername`\n\nSets the servername corresponding to the hostname you connect to the virtual host at. Defaults to the title of the resource.\n\n#####`setenv`\n\nUsed by HTTPD to set environment variables for vhosts. Defaults to '[]'.\n\n#####`setenvif`\n\nUsed by HTTPD to conditionally set environment variables for vhosts. Defaults to '[]'.\n\n#####`suphp_addhandler`, `suphp_configpath`, & `suphp_engine`\n\nSet up a virtual host with [suPHP](http://suphp.org/DocumentationView.html?file=apache/CONFIG). \n\n`suphp_addhandler` defaults to 'php5-script' on RedHat and FreeBSD, and 'x-httpd-php' on Debian.\n\n`suphp_configpath` defaults to 'undef' on RedHat and FreeBSD, and '/etc/php5/apache2' on Debian.\n\n`suphp_engine` allows values 'on' or 'off'. Defaults to 'off'\n\nTo set up a virtual host with suPHP\n\n```puppet\n    apache::vhost { 'suphp.example.com':\n      port                => '80',\n      docroot             => '/home/appuser/myphpapp',\n      suphp_addhandler    => 'x-httpd-php',\n      suphp_engine        => 'on',\n      suphp_configpath    => '/etc/php5/apache2',\n      directories         => { path => '/home/appuser/myphpapp',\n        'suphp'           => { user => 'myappuser', group => 'myappgroup' },\n      }\n    }\n```\n\n#####`vhost_name`\n\nEnables name-based virtual hosting. If no IP is passed to the virtual host but the vhost is assigned a port, then the vhost name will be 'vhost_name:port'. If the virtual host has no assigned IP or port, the vhost name will be set to the title of the resource. Defaults to '*'.\n\n#####`virtual_docroot` \n\nSets up a virtual host with a wildcard alias subdomain mapped to a directory with the same name. For example, 'http://example.com' would map to '/var/www/example.com'. Defaults to 'false'. \n\n```puppet\n    apache::vhost { 'subdomain.loc':\n      vhost_name       => '*',\n      port             => '80',\n      virtual_docroot' => '/var/www/%-2+',\n      docroot          => '/var/www',\n      serveraliases    => ['*.loc',],\n    }\n```\n\n#####`wsgi_daemon_process`, `wsgi_daemon_process_options`, `wsgi_process_group`, & `wsgi_script_aliases`\n\nSet up a virtual host with [WSGI](https://code.google.com/p/modwsgi/).\n\n`wsgi_daemon_process` sets the name of the WSGI daemon. It is a hash, accepting [these keys](http://modwsgi.readthedocs.org/en/latest/configuration-directives/WSGIDaemonProcess.html), and it defaults to 'undef'.\n\n`wsgi_daemon_process_options` is optional and defaults to 'undef'.\n\n`wsgi_process_group` sets the group ID the virtual host will run under. Defaults to 'undef'.\n\n`wsgi_script_aliases` requires a hash of web paths to filesystem .wsgi paths. Defaults to 'undef'.\n\nTo set up a virtual host with WSGI\n\n```puppet\n    apache::vhost { 'wsgi.example.com':\n      port                        => '80',\n      docroot                     => '/var/www/pythonapp',\n      wsgi_daemon_process         => 'wsgi',\n      wsgi_daemon_process_options =>\n        { processes    => '2', \n          threads      => '15', \n          display-name => '%{GROUP}',\n         },\n      wsgi_process_group          => 'wsgi',\n      wsgi_script_aliases         => { '/' => '/var/www/demo.wsgi' },\n    }\n```\n\n####Parameter `directories` for `apache::vhost`\n\nThe `directories` parameter within the `apache::vhost` class passes an array of hashes to the vhost to create [Directory](http://httpd.apache.org/docs/current/mod/core.html#directory), [File](http://httpd.apache.org/docs/current/mod/core.html#files), and [Location](http://httpd.apache.org/docs/current/mod/core.html#location) directive blocks. These blocks take the form, '< Directory /path/to/directory>...< /Directory>'.\n\nEach hash passed to `directories` must contain `path` as one of the keys.  You may also pass in `provider` which, if missing, defaults to 'directory'. (A full list of acceptable keys is below.) General usage will look something like\n\n```puppet\n    apache::vhost { 'sample.example.net':\n      docroot     => '/path/to/directory',\n      directories => [\n        { path => '/path/to/directory', <key> => <value> },\n        { path => '/path/to/another/directory', <key> => <value> },\n      ],\n    }\n```\n\n*Note:* At least one directory should match the `docroot` parameter. Once you start declaring directories, `apache::vhost` assumes that all required Directory blocks will be declared. If not defined, a single default Directory block will be created that matches the `docroot` parameter.\n\nThe `provider` key can be set to 'directory', 'files', or 'location'. If the path starts with a [~](https://httpd.apache.org/docs/current/mod/core.html#files), HTTPD will interpret this as the equivalent of DirectoryMatch, FilesMatch, or LocationMatch.\n\n```puppet\n    apache::vhost { 'files.example.net':\n      docroot     => '/var/www/files',\n      directories => [\n        { 'path'     => '/var/www/files', \n          'provider' => 'files', \n          'deny'     => 'from all' \n         },\n      ],\n    }\n```\n\nAvailable handlers, represented as keys, should be placed within the  `directory`,`'files`, or `location` hashes.  This looks like\n\n```puppet\n  apache::vhost { 'sample.example.net':\n      docroot     => '/path/to/directory',\n      directories => [ { path => '/path/to/directory', handler => value } ],\n}\n```\n\nAny handlers you do not set in these hashes will be considered 'undefined' within Puppet and will not be added to the virtual host, resulting in the module using their default values. Currently this is the list of supported handlers:\n\n######`addhandlers`\n\nSets [AddHandler](http://httpd.apache.org/docs/current/mod/mod_mime.html#addhandler) directives, which map filename extensions to the specified handler. Accepts a list of hashes, with `extensions` serving to list the extensions being managed by the handler, and takes the form: `{ handler => 'handler-name', extensions => ['extension']}`. \n\n```puppet\n    apache::vhost { 'sample.example.net':\n      docroot     => '/path/to/directory',\n      directories => [ \n        { path        => '/path/to/directory',\n          addhandlers => [{ handler => 'cgi-script', extensions => ['.cgi']}],\n        }, \n      ],\n    }\n```\n\n######`allow`\n\nSets an [Allow](http://httpd.apache.org/docs/2.2/mod/mod_authz_host.html#allow) directive, which groups authorizations based on hostnames or IPs. **Deprecated:** This parameter is being deprecated due to a change in Apache. It will only work with Apache 2.2 and lower. \n\n```puppet\n    apache::vhost { 'sample.example.net':\n      docroot     => '/path/to/directory',\n      directories => [ \n        { path  => '/path/to/directory', \n          allow => 'from example.org', \n        }, \n      ],\n    }\n```\n\n######`allow_override`\n\nSets the types of directives allowed in [.htaccess](http://httpd.apache.org/docs/current/mod/core.html#allowoverride) files. Accepts an array.\n\n```puppet\n    apache::vhost { 'sample.example.net':\n      docroot      => '/path/to/directory',\n      directories  => [ \n        { path           => '/path/to/directory', \n          allow_override => ['AuthConfig', 'Indexes'], \n        }, \n      ],\n    }\n```\n\n######`auth_basic_authoritative`\n\nSets the value for [AuthBasicAuthoritative](https://httpd.apache.org/docs/current/mod/mod_auth_basic.html#authbasicauthoritative), which determines whether authorization and authentication are passed to lower level Apache modules.\n\n######`auth_basic_fake`\n\nSets the value for [AuthBasicFake](httpd.apache.org/docs/current/mod/mod_auth_basic.html#authbasicfake), which statically configures authorization credentials for a given directive block.\n\n######`auth_basic_provider`\n\nSets the value for [AuthBasicProvider] (httpd.apache.org/docs/current/mod/mod_auth_basic.html#authbasicprovider), which sets the authentication provider for a given location.\n\n######`auth_digest_algorithm`\n\nSets the value for [AuthDigestAlgorithm](httpd.apache.org/docs/current/mod/mod_auth_digest.html#authdigestalgorithm), which selects the algorithm used to calculate the challenge and response hashes.\n\n######`auth_digest_domain`\n\nSets the value for [AuthDigestDomain](httpd.apache.org/docs/current/mod/mod_auth_digest.html#authdigestdomain), which allows you to specify one or more URIs in the same protection space for digest authentication.\n\n######`auth_digest_nonce_lifetime`\n\nSets the value for [AuthDigestNonceLifetime](httpd.apache.org/docs/current/mod/mod_auth_digest.html#authdigestnoncelifetime), which controls how long the server nonce is valid.\n\n######`auth_digest_provider`\n\nSets the value for [AuthDigestProvider](httpd.apache.org/docs/current/mod/mod_auth_digest.html#authdigestprovider), which sets the authentication provider for a given location.\n\n######`auth_digest_qop`\n\nSets the value for [AuthDigestQop](httpd.apache.org/docs/current/mod/mod_auth_digest.html#authdigestqop), which determines the quality-of-protection to use in digest authentication.\n\n######`auth_digest_shmem_size`\n\nSets the value for [AuthAuthDigestShmemSize](httpd.apache.org/docs/current/mod/mod_auth_digest.html#authdigestshmemsize), which defines the amount of shared memory allocated to the server for keeping track of clients.\n\n######`auth_group_file`\n\nSets the value for [AuthGroupFile](https://httpd.apache.org/docs/current/mod/mod_authz_groupfile.html#authgroupfile), which sets the name of the text file containing the list of user groups for authorization.\n\n######`auth_name`\n\nSets the value for [AuthName](http://httpd.apache.org/docs/current/mod/mod_authn_core.html#authname), which sets the name of the authorization realm.\n\n######`auth_require`\n\nSets the entity name you're requiring to allow access. Read more about [Require](http://httpd.apache.org/docs/current/mod/mod_authz_host.html#requiredirectives).\n\n######`auth_type`\n\nSets the value for [AuthType](httpd.apache.org/docs/current/mod/mod_authn_core.html#authtype), which guides the type of user authentication.\n\n######`auth_user_file`\n\nSets the value for [AuthUserFile](httpd.apache.org/docs/current/mod/mod_authn_file.html#authuserfile), which sets the name of the text file containing the users/passwords for authentication.\n\n######`custom_fragment`\n\nPass a string of custom configuration directives to be placed at the end of the directory configuration.\n\n```puppet\n  apache::vhost { 'monitor':\n    … \n    custom_fragment => '\n  <Location /balancer-manager>\n    SetHandler balancer-manager\n    Order allow,deny\n    Allow from all\n  </Location>\n  <Location /server-status>\n    SetHandler server-status\n    Order allow,deny\n    Allow from all\n  </Location>\n  ProxyStatus On',\n}\n```\n\n######`deny`\n\nSets a [Deny](http://httpd.apache.org/docs/2.2/mod/mod_authz_host.html#deny) directive, specifying which hosts are denied access to the server. **Deprecated:** This parameter is being deprecated due to a change in Apache. It will only work with Apache 2.2 and lower. \n\n```puppet\n    apache::vhost { 'sample.example.net':\n      docroot     => '/path/to/directory',\n      directories => [ \n        { path => '/path/to/directory', \n          deny => 'from example.org', \n        }, \n      ],\n    }\n```\n\n######`error_documents`\n\nAn array of hashes used to override the [ErrorDocument](https://httpd.apache.org/docs/current/mod/core.html#errordocument) settings for the directory. \n\n```puppet\n    apache::vhost { 'sample.example.net':\n      directories => [ \n        { path            => '/srv/www',\n          error_documents => [\n            { 'error_code' => '503', \n              'document'   => '/service-unavail',\n            },\n          ],\n        },\n      ],\n    }\n```\n\n######`headers`\n\nAdds lines for [Header](http://httpd.apache.org/docs/current/mod/mod_headers.html#header) directives.\n\n```puppet\n    apache::vhost { 'sample.example.net':\n      docroot     => '/path/to/directory',\n      directories => {\n        path    => '/path/to/directory',\n        headers => 'Set X-Robots-Tag \"noindex, noarchive, nosnippet\"',\n      },\n    }\n```\n\n######`index_options`\n\nAllows configuration settings for [directory indexing](httpd.apache.org/docs/current/mod/mod_autoindex.html#indexoptions).\n\n```puppet\n    apache::vhost { 'sample.example.net':\n      docroot     => '/path/to/directory',\n      directories => [ \n        { path          => '/path/to/directory', \n          options       => ['Indexes','FollowSymLinks','MultiViews'], \n          index_options => ['IgnoreCase', 'FancyIndexing', 'FoldersFirst', 'NameWidth=*', 'DescriptionWidth=*', 'SuppressHTMLPreamble'],\n        },\n      ],\n    }\n```\n\n######`index_order_default`\n\nSets the [default ordering](http://httpd.apache.org/docs/current/mod/mod_autoindex.html#indexorderdefault) of the directory index.\n\n```puppet\n    apache::vhost { 'sample.example.net':\n      docroot     => '/path/to/directory',\n      directories => [ \n        { path                => '/path/to/directory', \n          order               => 'Allow,Deny', \n          index_order_default => ['Descending', 'Date'],\n        }, \n      ],\n    }\n```\n\n######`options`\n\nLists the [Options](httpd.apache.org/docs/current/mod/core.html#options) for the given Directory block.\n\n```puppet\n    apache::vhost { 'sample.example.net':\n      docroot     => '/path/to/directory',\n      directories => [ \n        { path    => '/path/to/directory', \n          options => ['Indexes','FollowSymLinks','MultiViews'], \n        },\n      ],\n    }\n```\n\n######`order`\n\nSets the order of processing Allow and Deny statements as per [Apache core documentation](httpd.apache.org/docs/2.2/mod/mod_authz_host.html#order). **Deprecated:** This parameter is being deprecated due to a change in Apache. It will only work with Apache 2.2 and lower.\n\n```puppet\n    apache::vhost { 'sample.example.net':\n      docroot     => '/path/to/directory',\n      directories => [ \n        { path  => '/path/to/directory', \n          order => 'Allow,Deny', \n        },\n      ],\n    }\n```\n\n######`sethandler`\n\nSets a `SetHandler` directive as per the [Apache Core documentation](http://httpd.apache.org/docs/2.2/mod/core.html#sethandler). An example:\n\n```puppet\n    apache::vhost { 'sample.example.net':\n      docroot     => '/path/to/directory',\n      directories => [ \n        { path       => '/path/to/directory', \n          sethandler => 'None', \n        }\n      ],\n    }\n```\n\n######`passenger_enabled`\n\nSets the value for the [PassengerEnabled](http://www.modrails.com/documentation/Users%20guide%20Apache.html#PassengerEnabled) directory to 'on' or 'off'. Requires `apache::mod::passenger` to be included.\n\n```puppet\n    apache::vhost { 'sample.example.net':\n      docroot     => '/path/to/directory',\n      directories => [ \n        { path              => '/path/to/directory', \n          passenger_enabled => 'on',\n        }, \n      ],\n    }\n```\n\n*Note:* Be aware that there is an [issue](http://www.conandalton.net/2010/06/passengerenabled-off-not-working.html) using the PassengerEnabled directive with the PassengerHighPerformance directive.\n\n######`php_admin_value` and `php_admin_flag`\n\n`php_admin_value` sets the value of the directory, and `php_admin_flag` uses a boolean to configure the directory. Further information can be found [here](http://php.net/manual/en/configuration.changes.php).\n\n######`ssl_options`\n\nString or list of [SSLOptions](https://httpd.apache.org/docs/current/mod/mod_ssl.html#ssloptions), which configure SSL engine run-time options. This handler takes precedence over SSLOptions set in the parent block of the vhost.\n\n```puppet\n    apache::vhost { 'secure.example.net':\n      docroot     => '/path/to/directory',\n      directories => [\n        { path        => '/path/to/directory', \n          ssl_options => '+ExportCertData', \n        },\n        { path        => '/path/to/different/dir', \n          ssl_options => [ '-StdEnvVars', '+ExportCertData'],\n        },\n      ],\n    }\n```\n\n######`suphp`\n\nA hash containing the 'user' and 'group' keys for the [suPHP_UserGroup](http://www.suphp.org/DocumentationView.html?file=apache/CONFIG) setting. It must be used with `suphp_engine => on` in the vhost declaration, and may only be passed within `directories`.\n\n```puppet\n    apache::vhost { 'secure.example.net':\n      docroot     => '/path/to/directory',\n      directories => [\n        { path  => '/path/to/directory', \n          suphp => \n            { user  =>  'myappuser', \n              group => 'myappgroup', \n            },\n        },\n      ],\n    }\n```\n\n####SSL parameters for `apache::vhost`\n\nAll of the SSL parameters for `::vhost` will default to whatever is set in the base `apache` class. Use the below parameters to tweak individual SSL settings for specific vhosts.\n\n#####`ssl`\n\nEnables SSL for the virtual host. SSL vhosts only respond to HTTPS queries. Valid values are 'true' or 'false'. Defaults to 'false'. \n\n#####`ssl_ca`\n\nSpecifies the SSL certificate authority. Defaults to 'undef'.\n\n#####`ssl_cert`\n\nSpecifies the SSL certification. Defaults are based on your OS: '/etc/pki/tls/certs/localhost.crt' for RedHat, '/etc/ssl/certs/ssl-cert-snakeoil.pem' for Debian, and '/usr/local/etc/apache22/server.crt' for FreeBSD.\n\n#####`ssl_protocol`\n\nSpecifies [SSLProtocol](http://httpd.apache.org/docs/current/mod/mod_ssl.html#sslprotocol). Defaults to 'undef'. \n\nIf you do not use this parameter, it will use the HTTPD default from ssl.conf.erb, 'all -SSLv2'.\n\n#####`ssl_cipher`\n\nSpecifies [SSLCipherSuite](http://httpd.apache.org/docs/current/mod/mod_ssl.html#sslciphersuite). Defaults to 'undef'.\n\nIf you do not use this parameter, it will use the HTTPD default from ssl.conf.erb, 'HIGH:MEDIUM:!aNULL:!MD5'.\n\n#####`ssl_honorcipherorder`\n\nSets [SSLHonorCipherOrder](http://httpd.apache.org/docs/current/mod/mod_ssl.html#sslhonorcipherorder), which is used to prefer the server's cipher preference order. Defaults to 'On' in the base `apache` config.\n\n#####`ssl_certs_dir`\n\nSpecifies the location of the SSL certification directory. Defaults to '/etc/ssl/certs' on Debian, '/etc/pki/tls/certs' on RedHat, and '/usr/local/etc/apache22' on FreeBSD.\n\n#####`ssl_chain`\n\nSpecifies the SSL chain. Defaults to 'undef'. (This default will work out of the box but must be updated in the base `apache` class with your specific certificate information before being used in production.)\n\n#####`ssl_crl`\n\nSpecifies the certificate revocation list to use. Defaults to 'undef'. (This default will work out of the box but must be updated in the base `apache` class with your specific certificate information before being used in production.)\n\n#####`ssl_crl_path`\n\nSpecifies the location of the certificate revocation list. Defaults to 'undef'. (This default will work out of the box but must be updated in the base `apache` class with your specific certificate information before being used in production.)\n\n#####`ssl_key`\n\nSpecifies the SSL key. Defaults are based on your operating system: '/etc/pki/tls/private/localhost.key' for RedHat, '/etc/ssl/private/ssl-cert-snakeoil.key' for Debian, and '/usr/local/etc/apache22/server.key' for FreeBSD. (This default will work out of the box but must be updated in the base `apache` class with your specific certificate information before being used in production.)\n\n#####`ssl_verify_client`\n\nSets the [SSLVerifyClient](http://httpd.apache.org/docs/current/mod/mod_ssl.html#sslverifyclient) directive, which sets the certificate verification level for client authentication. Valid values are: 'none', 'optional', 'require', and 'optional_no_ca'. Defaults to 'undef'.\n\n```puppet\n    apache::vhost { 'sample.example.net':\n      …\n      ssl_verify_client => 'optional',\n    }\n```\n\n#####`ssl_verify_depth`\n\nSets the [SSLVerifyDepth](http://httpd.apache.org/docs/current/mod/mod_ssl.html#sslverifydepth) directive, which specifies the maximum depth of CA certificates in client certificate verification. Defaults to 'undef'.\n\n```puppet\n    apache::vhost { 'sample.example.net':\n      …\n      ssl_verify_depth => 1,\n    }\n```\n\n#####`ssl_options`\n\nSets the [SSLOptions](http://httpd.apache.org/docs/current/mod/mod_ssl.html#ssloptions) directive, which configures various SSL engine run-time options. This is the global setting for the given vhost and can be a string or an array. Defaults to 'undef'. \n\nA string:\n\n```puppet\n    apache::vhost { 'sample.example.net':\n      …\n      ssl_options => '+ExportCertData',\n    }\n```\n\nAn array:\n\n```puppet\n    apache::vhost { 'sample.example.net':\n      …\n      ssl_options => [ '+StrictRequire', '+ExportCertData' ],\n    }\n```\n\n#####`ssl_proxyengine`\n\nSpecifies whether or not to use [SSLProxyEngine](http://httpd.apache.org/docs/current/mod/mod_ssl.html#sslproxyengine). Valid values are 'true' and 'false'. Defaults to 'false'.\n\n\n###Virtual Host Examples\n\nThe apache module allows you to set up pretty much any configuration of virtual host you might need. This section will address some common configurations, but look at the [Tests section](https://github.com/puppetlabs/puppetlabs-apache/tree/master/tests) for even more examples.\n\nConfigure a vhost with a server administrator\n\n```puppet\n    apache::vhost { 'third.example.com':\n      port        => '80',\n      docroot     => '/var/www/third',\n      serveradmin => 'admin@example.com',\n    }\n```\n\n- - -\n\nSet up a vhost with aliased servers\n\n```puppet\n    apache::vhost { 'sixth.example.com':\n      serveraliases => [\n        'sixth.example.org',\n        'sixth.example.net',\n      ],\n      port          => '80',\n      docroot       => '/var/www/fifth',\n    }\n```\n\n- - -\n\nConfigure a vhost with a cgi-bin\n\n```puppet\n    apache::vhost { 'eleventh.example.com':\n      port        => '80',\n      docroot     => '/var/www/eleventh',\n      scriptalias => '/usr/lib/cgi-bin',\n    }\n```\n\n- - -\n\nSet up a vhost with a rack configuration\n\n```puppet\n    apache::vhost { 'fifteenth.example.com':\n      port           => '80',\n      docroot        => '/var/www/fifteenth',\n      rack_base_uris => ['/rackapp1', '/rackapp2'],\n    }\n```\n\n- - -\n\nSet up a mix of SSL and non-SSL vhosts at the same domain\n\n```puppet\n    #The non-ssl vhost\n    apache::vhost { 'first.example.com non-ssl':\n      servername => 'first.example.com',\n      port       => '80',\n      docroot    => '/var/www/first',\n    }\n\n    #The SSL vhost at the same domain\n    apache::vhost { 'first.example.com ssl':\n      servername => 'first.example.com',\n      port       => '443',\n      docroot    => '/var/www/first',\n      ssl        => true,\n    }\n```\n\n- - -\n\nConfigure a vhost to redirect non-SSL connections to SSL\n\n```puppet\n    apache::vhost { 'sixteenth.example.com non-ssl':\n      servername      => 'sixteenth.example.com',\n      port            => '80',\n      docroot         => '/var/www/sixteenth',\n      redirect_status => 'permanent',\n      redirect_dest   => 'https://sixteenth.example.com/'\n    }\n    apache::vhost { 'sixteenth.example.com ssl':\n      servername => 'sixteenth.example.com',\n      port       => '443',\n      docroot    => '/var/www/sixteenth',\n      ssl        => true,\n    }\n```\n\n- - -\n\nSet up IP-based vhosts on any listen port and have them respond to requests on specific IP addresses. In this example, we will set listening on ports 80 and 81. This is required because the example vhosts are not declared with a port parameter.\n\n```puppet\n    apache::listen { '80': }\n    apache::listen { '81': }\n```\n\nThen we will set up the IP-based vhosts\n\n```puppet\n    apache::vhost { 'first.example.com':\n      ip       => '10.0.0.10',\n      docroot  => '/var/www/first',\n      ip_based => true,\n    }\n    apache::vhost { 'second.example.com':\n      ip       => '10.0.0.11',\n      docroot  => '/var/www/second',\n      ip_based => true,\n    }\n```\n\n- - -\n\nConfigure a mix of name-based and IP-based vhosts. First, we will add two IP-based vhosts on 10.0.0.10, one SSL and one non-SSL\n\n```puppet\n    apache::vhost { 'The first IP-based vhost, non-ssl':\n      servername => 'first.example.com',\n      ip         => '10.0.0.10',\n      port       => '80',\n      ip_based   => true,\n      docroot    => '/var/www/first',\n    }\n    apache::vhost { 'The first IP-based vhost, ssl':\n      servername => 'first.example.com',\n      ip         => '10.0.0.10',\n      port       => '443',\n      ip_based   => true,\n      docroot    => '/var/www/first-ssl',\n      ssl        => true,\n    }\n```\n\nThen, we will add two name-based vhosts listening on 10.0.0.20\n\n```puppet\n    apache::vhost { 'second.example.com':\n      ip      => '10.0.0.20',\n      port    => '80',\n      docroot => '/var/www/second',\n    }\n    apache::vhost { 'third.example.com':\n      ip      => '10.0.0.20',\n      port    => '80',\n      docroot => '/var/www/third',\n    }\n```\n\nIf you want to add two name-based vhosts so that they will answer on either 10.0.0.10 or 10.0.0.20, you **MUST** declare `add_listen => 'false'` to disable the otherwise automatic 'Listen 80', as it will conflict with the preceding IP-based vhosts.\n\n```puppet\n    apache::vhost { 'fourth.example.com':\n      port       => '80',\n      docroot    => '/var/www/fourth',\n      add_listen => false,\n    }\n    apache::vhost { 'fifth.example.com':\n      port       => '80',\n      docroot    => '/var/www/fifth',\n      add_listen => false,\n    }\n```\n\n###Load Balancing\n\n####Defined Type: `apache::balancer`\n\n`apache::balancer` creates an Apache balancer cluster. Each balancer cluster needs one or more balancer members, which are declared with [`apache::balancermember`](#defined-type-apachebalancermember). \n\nOne `apache::balancer` defined resource should be defined for each Apache load balanced set of servers. The `apache::balancermember` resources for all balancer members can be exported and collected on a single Apache load balancer server using exported resources.\n\n**Parameters within `apache::balancer`:**\n\n#####`name`\n\nSets the balancer cluster's title. This parameter will also set the title of the conf.d file.\n\n#####`proxy_set`\n\nConfigures key-value pairs as [ProxySet](http://httpd.apache.org/docs/current/mod/mod_proxy.html#proxyset) lines. Accepts a hash, and defaults to '{}'.\n\n#####`collect_exported`\n\nDetermines whether or not to use exported resources. Valid values 'true' and 'false', defaults to 'true'. \n\nIf you statically declare all of your backend servers, you should set this to 'false' to rely on existing declared balancer member resources. Also make sure to use `apache::balancermember` with array arguments.\n\nIf you wish to dynamically declare your backend servers via [exported resources](http://docs.puppetlabs.com/guides/exported_resources.html) collected on a central node, you must set this parameter to 'true' in order to collect the exported balancer member resources that were exported by the balancer member nodes.\n\nIf you choose not to use exported resources, all balancer members will be configured in a single puppet run. If you are using exported resources, Puppet has to run on the balanced nodes, then run on the balancer.\n\n####Defined Type: `apache::balancermember`\n\nDefines members of [mod_proxy_balancer](http://httpd.apache.org/docs/current/mod/mod_proxy_balancer.html), which will set up a balancer member inside a listening service configuration block in etc/apache/apache.cfg on the load balancer.\n\n**Parameters within `apache::balancermember`:**\n\n#####`name`\n\nSets the title of the resource. This name will also set the name of the concat fragment.\n\n#####`balancer_cluster`\n\nSets the Apache service's instance name. This must match the name of a declared `apache::balancer` resource. Required.\n\n#####`url`\n\nSpecifies the URL used to contact the balancer member server. Defaults to 'http://${::fqdn}/'.\n\n#####`options`\n\nAn array of [options](http://httpd.apache.org/docs/2.2/mod/mod_proxy.html#balancermember) to be specified after the URL. Accepts any key-value pairs available to [ProxyPass](http://httpd.apache.org/docs/2.2/mod/mod_proxy.html#proxypass).\n\n####Examples\n\nTo load balance with exported resources, export the `balancermember` from the balancer member\n\n```puppet\n      @@apache::balancermember { \"${::fqdn}-puppet00\":\n        balancer_cluster => 'puppet00',\n        url              => \"ajp://${::fqdn}:8009\"\n        options          => ['ping=5', 'disablereuse=on', 'retry=5', 'ttl=120'],\n      }\n```\n\nThen, on the proxy server, create the balancer cluster\n\n```puppet\n      apache::balancer { 'puppet00': }\n```\n\nTo load balance without exported resources, declare the following on the proxy\n\n```puppet\n    apache::balancer { 'puppet00': }\n    apache::balancermember { \"${::fqdn}-puppet00\":\n        balancer_cluster => 'puppet00',\n        url              => \"ajp://${::fqdn}:8009\"\n        options          => ['ping=5', 'disablereuse=on', 'retry=5', 'ttl=120'],\n      }\n```\n\nThen declare `apache::balancer` and `apache::balancermember` on the proxy server.\n\nIf you need to use ProxySet in the balancer config\n\n```puppet\n      apache::balancer { 'puppet01':\n        proxy_set => {'stickysession' => 'JSESSIONID'},\n      }\n```\n\n##Reference\n\n###Classes\n\n####Public Classes\n\n* [`apache`](#class-apache): Guides the basic setup of Apache.\n* `apache::dev`: Installs Apache development libraries. (*Note:* On FreeBSD, you must declare `apache::package` or `apache` before `apache::dev`.)\n* [`apache::mod::[name]`](#classes-apachemodname): Enables specific Apache HTTPD modules.\n \n####Private Classes\n\n* `apache::confd::no_accf`: Creates the no-accf.conf configuration file in conf.d, required by FreeBSD's Apache 2.4.\n* `apache::default_confd_files`: Includes conf.d files for FreeBSD.\n* `apache::default_mods`: Installs the Apache modules required to run the default configuration.\n* `apache::package`: Installs and configures basic Apache packages.\n* `apache::params`: Manages Apache parameters.\n* `apache::service`: Manages the Apache daemon.\n\n###Defined Types\n\n####Public Defined Types\n\n* `apache::balancer`: Creates an Apache balancer cluster.\n* `apache::balancermember`: Defines members of [mod_proxy_balancer](http://httpd.apache.org/docs/current/mod/mod_proxy_balancer.html).\n* `apache::listen`: Based on the title, controls which ports Apache binds to for listening. Adds [Listen](http://httpd.apache.org/docs/current/bind.html) directives to ports.conf in the Apache HTTPD configuration directory. Titles take the form '<port>', '<ipv4>:<port>', or '<ipv6>:<port>'.\n* `apache::mod`: Used to enable arbitrary Apache HTTPD modules for which there is no specific `apache::mod::[name]` class.\n* `apache::namevirtualhost`: Enables name-based hosting of a virtual host. Adds all [NameVirtualHost](http://httpd.apache.org/docs/current/vhosts/name-based.html) directives to the `ports.conf` file in the Apache HTTPD configuration directory. Titles take the form '\\*', '*:<port>', '\\_default_:<port>, '<ip>', or '<ip>:<port>'.\n* `apache::vhost`: Allows specialized configurations for virtual hosts that have requirements outside the defaults. \n\n####Private Defined Types\n\n* `apache::peruser::multiplexer`: Enables the [Peruser](http://www.freebsd.org/cgi/url.cgi?ports/www/apache22-peruser-mpm/pkg-descr) module for FreeBSD only.\n* `apache::peruser::processor`: Enables the [Peruser](http://www.freebsd.org/cgi/url.cgi?ports/www/apache22-peruser-mpm/pkg-descr) module for FreeBSD only.\n\n###Templates\n\nThe Apache module relies heavily on templates to enable the `vhost` and `apache::mod` defined types. These templates are built based on Facter facts around your operating system. Unless explicitly called out, most templates are not meant for configuration.\n\n##Limitations\n\n###Ubuntu 10.04\n\nThe `apache::vhost::WSGIImportScript` parameter creates a statement inside the VirtualHost which is unsupported on older versions of Apache, causing this to fail.  This will be remedied in a future refactoring.\n\n###RHEL/CentOS 5\n\nThe `apache::mod::passenger` and `apache::mod::proxy_html` classes are untested since repositories are missing compatible packages.   \n\n###RHEL/CentOS 7\n\nThe `apache::mod::passenger` class is untested as the repository does not have packages for EL7 yet.  The fact that passenger packages aren't available also makes us unable to test the `rack_base_uri` parameter in `apache::vhost`.\n\n###General\n\nThis module is CI tested on Centos 5 & 6, Ubuntu 12.04 & 14.04, Debian 7, and RHEL 5, 6 & 7 platforms against both the OSS and Enterprise version of Puppet. \n\nThe module contains support for other distributions and operating systems, such as FreeBSD and Amazon Linux, but is not formally tested on those and regressions may occur.\n\n###SELinux and Custom Paths\n\nIf you are running with SELinux in enforcing mode and want to use custom paths for your `logroot`, `mod_dir`, `vhost_dir`, and `docroot`, you will need to manage the context for the files yourself.\n\nSomething along the lines of:\n\n```puppet\n        exec { 'set_apache_defaults':\n          command => 'semanage fcontext -a -t httpd_sys_content_t \"/custom/path(/.*)?\"',\n          path    => '/bin:/usr/bin/:/sbin:/usr/sbin',\n          require => Package['policycoreutils-python'],\n        }\n        package { 'policycoreutils-python': ensure => installed }\n        exec { 'restorecon_apache':\n          command => 'restorecon -Rv /apache_spec',\n          path    => '/bin:/usr/bin/:/sbin:/usr/sbin',\n          before  => Service['httpd'],\n          require => Class['apache'],\n        }\n        class { 'apache': }\n        host { 'test.server': ip => '127.0.0.1' }\n        file { '/custom/path': ensure => directory, }\n        file { '/custom/path/include': ensure => present, content => '#additional_includes' }\n        apache::vhost { 'test.server':\n          docroot             => '/custom/path',\n          additional_includes => '/custom/path/include',\n        }\n```\n\nYou need to set the contexts using `semanage fcontext` not `chcon` because `file {...}` resources will reset the context to the values in the database if the resource isn't specifying the context.\n\n##Development\n\n###Contributing\n\nPuppet Labs modules on the Puppet Forge are open projects, and community contributions are essential for keeping them great. We can’t access the huge number of platforms and myriad of hardware, software, and deployment configurations that Puppet is intended to serve.\n\nWe want to keep it as easy as possible to contribute changes so that our modules work in your environment. There are a few guidelines that we need contributors to follow so that we can have a chance of keeping on top of things.\n\nYou can read the complete module contribution guide [on the Puppet Labs wiki.](http://projects.puppetlabs.com/projects/module-site/wiki/Module_contributing)\n\n###Running tests\n\nThis project contains tests for both [rspec-puppet](http://rspec-puppet.com/) and [beaker-rspec](https://github.com/puppetlabs/beaker-rspec) to verify functionality. For in-depth information please see their respective documentation.\n\nQuickstart:\n\n    gem install bundler\n    bundle install\n    bundle exec rake spec\n    bundle exec rspec spec/acceptance\n    RS_DEBUG=yes bundle exec rspec spec/acceptance\n",
      "changelog": "##2014-07-15 - Supported Release 1.1.1\n###Summary\n\nThis release merely updates metadata.json so the module can be uninstalled and\nupgraded via the puppet module command.\n\n## 2014-04-14 Supported Release 1.1.0\n\n###Summary\n\nThis release primarily focuses on extending the httpd 2.4 support, tested\nthrough adding RHEL7 and Ubuntu 14.04 support.  It also includes Passenger \n4 support, as well as several new modules and important bugfixes.\n\n####Features\n\n- Add support for RHEL7 and Ubuntu 14.04\n- More complete apache24 support\n- Passenger 4 support\n- Add support for max_keepalive_requests and log_formats parameters\n- Add mod_pagespeed support\n- Add mod_speling support\n- Added several parameters for mod_passenger\n- Added ssl_cipher parameter to apache::mod::ssl\n- Improved examples in documentation\n- Added docroot_mode, action, and suexec_user_group parameters to apache::vhost\n- Add support for custom extensions for mod_php\n- Improve proxy_html support for Debian\n\n####Bugfixes\n\n- Remove NameVirtualHost directive for apache >= 2.4\n- Order proxy_set option so it doesn't change between runs\n- Fix inverted SSL compression\n- Fix missing ensure on concat::fragment resources\n- Fix bad dependencies in apache::mod and apache::mod::mime\n\n####Known Bugs\n* By default, the version of Apache that ships with Ubuntu 10.04 does not work with `wsgi_import_script`.\n* SLES is unsupported.\n\n## 2014-03-04 Supported Release 1.0.1\n###Summary\n\nThis is a supported release.  This release removes a testing symlink that can\ncause trouble on systems where /var is on a seperate filesystem from the\nmodulepath.\n\n####Features\n####Bugfixes\n####Known Bugs\n* By default, the version of Apache that ships with Ubuntu 10.04 does not work with `wsgi_import_script`.\n* SLES is unsupported.\n \n## 2014-03-04 Supported Release 1.0.0\n###Summary\n\nThis is a supported release. This release introduces Apache 2.4 support for\nDebian and RHEL based osfamilies.\n\n####Features\n\n- Add apache24 support\n- Add rewrite_base functionality to rewrites\n- Updated README documentation\n- Add WSGIApplicationGroup and WSGIImportScript directives\n\n####Bugfixes\n\n- Replace mutating hashes with merge() for Puppet 3.5\n- Fix WSGI import_script and mod_ssl issues on Lucid\n\n####Known Bugs\n* By default, the version of Apache that ships with Ubuntu 10.04 does not work with `wsgi_import_script`.\n* SLES is unsupported.\n\n---\n\n## 2014-01-31 Release 0.11.0\n### Summary:\n\nThis release adds preliminary support for Windows compatibility and multiple rewrite support.\n\n#### Backwards-incompatible Changes:\n\n- The rewrite_rule parameter is deprecated in favor of the new rewrite parameter\n  and will be removed in a future release.\n\n#### Features:\n\n- add Match directive\n- quote paths for windows compatibility\n- add auth_group_file option to README.md\n- allow AuthGroupFile directive for vhosts\n- Support Header directives in vhost context\n- Don't purge mods-available dir when separate enable dir is used\n- Fix the servername used in log file name\n- Added support for mod_include\n- Remove index parameters.\n- Support environment variable control for CustomLog\n- added redirectmatch support\n- Setting up the ability to do multiple rewrites and conditions.\n- Convert spec tests to beaker.\n- Support php_admin_(flag|value)s\n\n#### Bugfixes:\n\n- directories are either a Hash or an Array of Hashes\n- Configure Passenger in separate .conf file on RH so PassengerRoot isn't lost\n- (docs) Update list of `apache::mod::[name]` classes\n- (docs) Fix apache::namevirtualhost example call style\n- Fix $ports_file reference in apache::listen.\n- Fix $ports_file reference in Namevirtualhost.\n\n\n## 2013-12-05 Release 0.10.0\n### Summary:\n\nThis release adds FreeBSD osfamily support and various other improvements to some mods.\n\n#### Features:\n\n- Add suPHP_UserGroup directive to directory context\n- Add support for ScriptAliasMatch directives\n- Set SSLOptions StdEnvVars in server context\n- No implicit <Directory> entry for ScriptAlias path\n- Add support for overriding ErrorDocument\n- Add support for AliasMatch directives\n- Disable default \"allow from all\" in vhost-directories\n- Add WSGIPythonPath as an optional parameter to mod_wsgi. \n- Add mod_rpaf support\n- Add directives: IndexOptions, IndexOrderDefault\n- Add ability to include additional external configurations in vhost\n- need to use the provider variable not the provider key value from the directory hash for matches\n- Support for FreeBSD and few other features\n- Add new params to apache::mod::mime class\n- Allow apache::mod to specify module id and path\n- added $server_root parameter\n- Add Allow and ExtendedStatus support to mod_status\n- Expand vhost/_directories.pp directive support\n- Add initial support for nss module (no directives in vhost template yet)\n- added peruser and event mpms\n- added $service_name parameter\n- add parameter for TraceEnable\n- Make LogLevel configurable for server and vhost\n- Add documentation about $ip\n- Add ability to pass ip (instead of wildcard) in default vhost files\n\n#### Bugfixes:\n\n- Don't listen on port or set NameVirtualHost for non-existent vhost\n- only apply Directory defaults when provider is a directory\n- Working mod_authnz_ldap support on Debian/Ubuntu\n\n## 2013-09-06 Release 0.9.0\n### Summary:\nThis release adds more parameters to the base apache class and apache defined\nresource to make the module more flexible. It also adds or enhances SuPHP,\nWSGI, and Passenger mod support, and support for the ITK mpm module.\n\n#### Backwards-incompatible Changes:\n- Remove many default mods that are not normally needed.\n- Remove `rewrite_base` `apache::vhost` parameter; did not work anyway.\n- Specify dependencies on stdlib >=2.4.0 (this was already the case, but\nmaking explicit)\n- Deprecate `a2mod` in favor of the `apache::mod::*` classes and `apache::mod`\ndefined resource.\n\n#### Features:\n- `apache` class\n  - Add `httpd_dir` parameter to change the location of the configuration\n  files.\n  - Add `logroot` parameter to change the logroot\n  - Add `ports_file` parameter to changes the `ports.conf` file location\n  - Add `keepalive` parameter to enable persistent connections\n  - Add `keepalive_timeout` parameter to change the timeout\n  - Update `default_mods` to be able to take an array of mods to enable.\n- `apache::vhost`\n  - Add `wsgi_daemon_process`, `wsgi_daemon_process_options`,\n  `wsgi_process_group`, and `wsgi_script_aliases` parameters for per-vhost\n  WSGI configuration.\n  - Add `access_log_syslog` parameter to enable syslogging.\n  - Add `error_log_syslog` parameter to enable syslogging of errors.\n  - Add `directories` hash parameter. Please see README for documentation.\n  - Add `sslproxyengine` parameter to enable SSLProxyEngine\n  - Add `suphp_addhandler`, `suphp_engine`, and `suphp_configpath` for\n  configuring SuPHP.\n  - Add `custom_fragment` parameter to allow for arbitrary apache\n  configuration injection. (Feature pull requests are prefered over using\n  this, but it is available in a pinch.)\n- Add `apache::mod::suphp` class for configuring SuPHP.\n- Add `apache::mod::itk` class for configuring ITK mpm module.\n- Update `apache::mod::wsgi` class for global WSGI configuration with\n`wsgi_socket_prefix` and `wsgi_python_home` parameters.\n- Add README.passenger.md to document the `apache::mod::passenger` usage.\nAdded `passenger_high_performance`, `passenger_pool_idle_time`,\n`passenger_max_requests`, `passenger_stat_throttle_rate`, `rack_autodetect`,\nand `rails_autodetect` parameters.\n- Separate the httpd service resource into a new `apache::service` class for\ndependency chaining of `Class['apache'] -> <resource> ~>\nClass['apache::service']`\n- Added `apache::mod::proxy_balancer` class for `apache::balancer`\n\n#### Bugfixes:\n- Change dependency to puppetlabs-concat\n- Fix ruby 1.9 bug for `a2mod`\n- Change servername to be `$::hostname` if there is no `$::fqdn`\n- Make `/etc/ssl/certs` the default ssl certs directory for RedHat non-5.\n- Make `php` the default php package for RedHat non-5.\n- Made `aliases` able to take a single alias hash instead of requiring an\narray.\n\n## 2013-07-26 Release 0.8.1\n#### Bugfixes:\n- Update `apache::mpm_module` detection for worker/prefork\n- Update `apache::mod::cgi` and `apache::mod::cgid` detection for\nworker/prefork\n\n## 2013-07-16 Release 0.8.0\n#### Features:\n- Add `servername` parameter to `apache` class\n- Add `proxy_set` parameter to `apache::balancer` define\n\n#### Bugfixes:\n- Fix ordering for multiple `apache::balancer` clusters\n- Fix symlinking for sites-available on Debian-based OSs\n- Fix dependency ordering for recursive confdir management\n- Fix `apache::mod::*` to notify the service on config change\n- Documentation updates\n\n## 2013-07-09 Release 0.7.0\n#### Changes:\n- Essentially rewrite the module -- too many to list\n- `apache::vhost` has many abilities -- see README.md for details\n- `apache::mod::*` classes provide httpd mod-loading capabilities\n- `apache` base class is much more configurable\n\n#### Bugfixes:\n- Many. And many more to come\n\n## 2013-03-2 Release 0.6.0\n- update travis tests (add more supported versions)\n- add access log_parameter\n- make purging of vhost dir configurable\n\n## 2012-08-24 Release 0.4.0\n#### Changes:\n- `include apache` is now required when using `apache::mod::*`\n\n#### Bugfixes:\n- Fix syntax for validate_re\n- Fix formatting in vhost template\n- Fix spec tests such that they pass\n\n##2012-05-08 Puppet Labs <info@puppetlabs.com> - 0.0.4\n* e62e362 Fix broken tests for ssl, vhost, vhost::*\n* 42c6363 Changes to match style guide and pass puppet-lint without error\n* 42bc8ba changed name => path for file resources in order to name namevar by it's name\n* 72e13de One end too much\n* 0739641 style guide fixes: 'true' <> true, $operatingsystem needs to be $::operatingsystem, etc.\n* 273f94d fix tests\n* a35ede5 (#13860) Make a2enmod/a2dismo commands optional\n* 98d774e (#13860) Autorequire Package['httpd']\n* 05fcec5 (#13073) Add missing puppet spec tests\n* 541afda (#6899) Remove virtual a2mod definition\n* 976cb69 (#13072) Move mod python and wsgi package names to params\n* 323915a (#13060) Add .gitignore to repo\n* fdf40af (#13060) Remove pkg directory from source tree\n* fd90015 Add LICENSE file and update the ModuleFile\n* d3d0d23 Re-enable local php class\n* d7516c7 Make management of firewalls configurable for vhosts\n* 60f83ba Explicitly lookup scope of apache_name in templates.\n* f4d287f (#12581) Add explicit ordering for vdir directory\n* 88a2ac6 (#11706) puppetlabs-apache depends on puppetlabs-firewall\n* a776a8b (#11071) Fix to work with latest firewall module\n* 2b79e8b (#11070) Add support for Scientific Linux\n* 405b3e9 Fix for a2mod\n* 57b9048 Commit apache::vhost::redirect Manifest\n* 8862d01 Commit apache::vhost::proxy Manifest\n* d5c1fd0 Commit apache::mod::wsgi Manifest\n* a825ac7 Commit apache::mod::python Manifest\n* b77062f Commit Templates\n* 9a51b4a Vhost File Declarations\n* 6cf7312 Defaults for Parameters\n* 6a5b11a Ensure installed\n* f672e46 a2mod fix\n* 8a56ee9 add pthon support to apache\n",
      "license": "Copyright (C) 2012 Puppet Labs Inc\n\nPuppet Labs can be contacted at: info@puppetlabs.com\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n",
      "created_at": "2014-07-18 11:20:17 -0700",
      "updated_at": "2015-02-04 19:26:24 -0800",
      "deleted_at": null
    }
  ]
}